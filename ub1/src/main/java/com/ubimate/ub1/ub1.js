// Generated by Haxe 4.1.5
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = true;
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = true;
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice;
		var a1 = arguments;
		var a2 = a.call(a1);
		return f(a2);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var feffects_TweenObject = function(target,properties,duration,easing,autoStart,onFinish) {
	if(autoStart == null) {
		autoStart = false;
	}
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this.easing = easing;
	this.onFinish(onFinish);
	this.tweens = new haxe_ds_GenericStack();
	this._nbTotal = 0;
	var _g = 0;
	var _g1 = Reflect.fields(properties);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		var tp = new feffects_TweenProperty(target,key,Reflect.field(properties,key),duration,easing,false);
		tp.onFinish($bind(this,this._onFinish));
		var _this = this.tweens;
		_this.head = new haxe_ds_GenericCell(tp,_this.head);
		this._nbTotal++;
	}
	if(autoStart) {
		this.start();
	}
};
$hxClasses["feffects.TweenObject"] = feffects_TweenObject;
feffects_TweenObject.__name__ = true;
feffects_TweenObject.tween = function(target,properties,duration,easing,autoStart,onFinish) {
	if(autoStart == null) {
		autoStart = false;
	}
	return new feffects_TweenObject(target,properties,duration,easing,autoStart,onFinish);
};
feffects_TweenObject.prototype = {
	get_isPlaying: function() {
		var tween = this.tweens.iterator();
		while(tween.hasNext()) {
			var tween1 = tween.next();
			if(tween1.isPlaying) {
				return true;
			}
		}
		return false;
	}
	,setEasing: function(easing) {
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.setEasing(easing);
		}
		return this;
	}
	,start: function() {
		this._nbFinished = 0;
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.start();
		}
		return this.tweens;
	}
	,pause: function() {
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.pause();
		}
	}
	,resume: function() {
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.resume();
		}
	}
	,seek: function(n) {
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.seek(n);
		}
		return this;
	}
	,reverse: function() {
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.reverse();
		}
	}
	,stop: function(finish) {
		var tweenProp = this.tweens.iterator();
		while(tweenProp.hasNext()) {
			var tweenProp1 = tweenProp.next();
			tweenProp1.stop(finish);
		}
	}
	,onFinish: function(f) {
		this.__onFinish = f != null ? f : function() {
		};
		return this;
	}
	,_onFinish: function() {
		this._nbFinished++;
		if(this._nbFinished == this._nbTotal) {
			this.__onFinish();
		}
	}
	,__class__: feffects_TweenObject
	,__properties__: {get_isPlaying:"get_isPlaying"}
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = true;
haxe_ds_GenericStack.prototype = {
	remove: function(v) {
		var prev = null;
		var l = this.head;
		while(l != null) {
			if(l.elt == v) {
				if(prev == null) {
					this.head = l.next;
				} else {
					prev.next = l.next;
				}
				break;
			}
			prev = l;
			l = l.next;
		}
		return l != null;
	}
	,iterator: function() {
		var l = this.head;
		return { hasNext : function() {
			return l != null;
		}, next : function() {
			var k = l;
			l = k.next;
			return k.elt;
		}};
	}
	,__class__: haxe_ds_GenericStack
};
var feffects_Tween = function(init,end,dur,easing,autoStart,onUpdate,onFinish) {
	if(autoStart == null) {
		autoStart = false;
	}
	this._initVal = init;
	this._endVal = end;
	this.duration = dur;
	this._offsetTime = 0;
	this.position = 0;
	this.isPlaying = false;
	this.isPaused = false;
	this.isReversed = false;
	this.onUpdate(onUpdate);
	this.onFinish(onFinish);
	this.setEasing(easing);
	if(autoStart) {
		this.start();
	}
};
$hxClasses["feffects.Tween"] = feffects_Tween;
feffects_Tween.__name__ = true;
feffects_Tween.addTween = function(tween) {
	if(!feffects_Tween._isTweening) {
		feffects_Tween._timer = new haxe_Timer(feffects_Tween.INTERVAL);
		feffects_Tween._timer.run = feffects_Tween.cb_tick;
		feffects_Tween._isTweening = true;
		feffects_Tween.cb_tick();
	}
	var _this = feffects_Tween._aTweens;
	_this.head = new haxe_ds_GenericCell(tween,_this.head);
};
feffects_Tween.removeActiveTween = function(tween) {
	feffects_Tween._aTweens.remove(tween);
	feffects_Tween.checkActiveTweens();
};
feffects_Tween.removePausedTween = function(tween) {
	feffects_Tween._aPaused.remove(tween);
	feffects_Tween.checkActiveTweens();
};
feffects_Tween.checkActiveTweens = function() {
	if(feffects_Tween._aTweens.head == null) {
		if(feffects_Tween._timer != null) {
			feffects_Tween._timer.stop();
			feffects_Tween._timer = null;
		}
		feffects_Tween._isTweening = false;
	}
};
feffects_Tween.getActiveTweens = function() {
	return feffects_Tween._aTweens;
};
feffects_Tween.getPausedTweens = function() {
	return feffects_Tween._aPaused;
};
feffects_Tween.setTweenPaused = function(tween) {
	var _this = feffects_Tween._aPaused;
	_this.head = new haxe_ds_GenericCell(tween,_this.head);
	feffects_Tween._aTweens.remove(tween);
	feffects_Tween.checkActiveTweens();
};
feffects_Tween.setTweenActive = function(tween) {
	var _this = feffects_Tween._aTweens;
	_this.head = new haxe_ds_GenericCell(tween,_this.head);
	feffects_Tween._aPaused.remove(tween);
	if(!feffects_Tween._isTweening) {
		feffects_Tween._timer = new haxe_Timer(feffects_Tween.INTERVAL);
		feffects_Tween._timer.run = feffects_Tween.cb_tick;
		feffects_Tween._isTweening = true;
		feffects_Tween.cb_tick();
	}
};
feffects_Tween.cb_tick = function() {
	var i = feffects_Tween._aTweens.iterator();
	while(i.hasNext()) {
		var i1 = i.next();
		i1.doInterval();
	}
};
feffects_Tween.easingEquation = function(t,b,c,d) {
	return c / 2 * (Math.sin(Math.PI * (t / d - 0.5)) + 1) + b;
};
feffects_Tween.prototype = {
	start: function(position) {
		if(position == null) {
			position = 0;
		}
		this._startTime = new Date().getTime();
		this._reverseTime = new Date().getTime();
		this.seek(position);
		if(this.isPaused) {
			feffects_Tween.removePausedTween(this);
		}
		this.isPlaying = true;
		this.isPaused = false;
		feffects_Tween.addTween(this);
		if(this.duration == 0 || position >= this.duration) {
			this.stop(true);
		}
	}
	,pause: function() {
		if(!this.isPlaying || this.isPaused) {
			return;
		}
		this._pauseTime = new Date().getTime();
		this.isPlaying = false;
		this.isPaused = true;
		feffects_Tween.setTweenPaused(this);
	}
	,resume: function() {
		if(!this.isPaused || this.isPlaying) {
			return;
		}
		this._startTime += new Date().getTime() - this._pauseTime;
		this._reverseTime += new Date().getTime() - this._pauseTime;
		this.isPlaying = true;
		this.isPaused = false;
		feffects_Tween.setTweenActive(this);
	}
	,seek: function(ms) {
		this._offsetTime = ms < this.duration ? ms : this.duration;
		return this;
	}
	,reverse: function() {
		if(!this.isPlaying) {
			return;
		}
		this.isReversed = !this.isReversed;
		if(!this.isReversed) {
			this._startTime += (new Date().getTime() - this._reverseTime) * 2;
		}
		this._reverseTime = new Date().getTime();
	}
	,stop: function(doFinish) {
		if(doFinish == null) {
			doFinish = false;
		}
		if(this.isPaused) {
			feffects_Tween.removePausedTween(this);
		} else if(this.isPlaying) {
			feffects_Tween.removeActiveTween(this);
		}
		this.isPaused = false;
		this.isPlaying = false;
		if(doFinish) {
			this.finish();
		}
	}
	,finish: function() {
		this._onUpdate(this.isReversed ? this._initVal : this._endVal);
		this._onFinish();
	}
	,onUpdate: function(f) {
		this._onUpdate = f != null ? f : function(_) {
		};
		return this;
	}
	,onFinish: function(f) {
		this._onFinish = f != null ? f : function() {
		};
		return this;
	}
	,setEasing: function(f) {
		this._easingF = f != null ? f : feffects_Tween.easingEquation;
		return this;
	}
	,doInterval: function() {
		var stamp = new Date().getTime();
		var curTime = 0;
		if(this.isReversed) {
			curTime = this._reverseTime * 2 - stamp - this._startTime + this._offsetTime;
		} else {
			curTime = stamp - this._startTime + this._offsetTime;
		}
		var curVal = this._easingF(curTime,this._initVal,this._endVal - this._initVal,this.duration);
		if(curTime >= this.duration || curTime < 0) {
			this.stop(true);
		} else {
			this._onUpdate(curVal);
		}
		this.position = curTime;
	}
	,getCurVal: function(curTime) {
		return this._easingF(curTime,this._initVal,this._endVal - this._initVal,this.duration);
	}
	,getStamp: function() {
		return new Date().getTime();
	}
	,__class__: feffects_Tween
};
var feffects_TweenProperty = function(target,prop,value,duration,easing,autostart,onFinish) {
	if(autostart == null) {
		autostart = false;
	}
	this.target = target;
	this.property = prop;
	feffects_Tween.call(this,Reflect.getProperty(target,this.property),value,duration,easing,autostart,$bind(this,this.__onUpdate),onFinish);
};
$hxClasses["feffects.TweenProperty"] = feffects_TweenProperty;
feffects_TweenProperty.__name__ = true;
feffects_TweenProperty.__super__ = feffects_Tween;
feffects_TweenProperty.prototype = $extend(feffects_Tween.prototype,{
	__onUpdate: function(n) {
		Reflect.setProperty(this.target,this.property,n);
	}
	,__class__: feffects_TweenProperty
});
var feffects_easing_Cubic = function() { };
$hxClasses["feffects.easing.Cubic"] = feffects_easing_Cubic;
feffects_easing_Cubic.__name__ = true;
feffects_easing_Cubic.easeIn = function(t,b,c,d) {
	return c * (t /= d) * t * t + b;
};
feffects_easing_Cubic.easeOut = function(t,b,c,d) {
	t = t / d - 1;
	return c * (t * t * t + 1) + b;
};
feffects_easing_Cubic.easeInOut = function(t,b,c,d) {
	if((t /= d * 0.5) < 1) {
		return c * 0.5 * t * t * t + b;
	} else {
		return c * 0.5 * ((t -= 2) * t * t + 2) + b;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native"}
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = true;
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( _g ) {
			if(typeof(haxe_Exception.caught(_g).unwrap()) == "string") {
				return false;
			} else {
				throw _g;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw haxe_Exception.thrown("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw haxe_Exception.thrown("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "{}";
		} else {
			return "{" + this.root.toString() + "}";
		}
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = true;
haxe_ds_TreeNode.prototype = {
	toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = true;
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = true;
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += i1 == null ? "null" : "" + i1;
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += Std.string(Std.string(i1));
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1.__id__]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.keysIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return keys[idx - 1];
	}};
};
haxe_ds_StringMap.stringify = function(h) {
	var s = "{";
	var first = true;
	for (var key in h) {
		if (first) first = false; else s += ',';
		s += key + ' => ' + Std.string(h[key]);
	}
	return s + "}";
};
haxe_ds_StringMap.prototype = {
	exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.h,key);
	}
	,get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,remove: function(key) {
		if(Object.prototype.hasOwnProperty.call(this.h,key)) {
			delete(this.h[key]);
			return true;
		} else {
			return false;
		}
	}
	,keys: function() {
		return haxe_ds_StringMap.keysIterator(this.h);
	}
	,toString: function() {
		return haxe_ds_StringMap.stringify(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString"]
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_ExprDef = $hxEnums["hscript.ExprDef"] = { __ename__ : true, __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta","ECheckType"]
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_index:12,__enum__:"hscript.ExprDef",toString:$estr}
	,EContinue: {_hx_index:13,__enum__:"hscript.ExprDef",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.ExprDef",toString:$estr}; },$_.__params__ = ["e","t"],$_)
};
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__ : true, __constructs__ : ["CTPath","CTFun","CTAnon","CTParent","CTOpt","CTNamed"]
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["n","t"],$_)
};
var hscript_Error = function(e,pmin,pmax,origin,line) {
	this.e = e;
	this.pmin = pmin;
	this.pmax = pmax;
	this.origin = origin;
	this.line = line;
};
$hxClasses["hscript.Error"] = hscript_Error;
hscript_Error.__name__ = true;
hscript_Error.prototype = {
	toString: function() {
		return hscript_Printer.errorToString(this);
	}
	,__class__: hscript_Error
};
var hscript_ErrorDef = $hxEnums["hscript.ErrorDef"] = { __ename__ : true, __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"]
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_index:2,__enum__:"hscript.ErrorDef",toString:$estr}
	,EUnterminatedComment: {_hx_index:3,__enum__:"hscript.ErrorDef",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.ErrorDef",toString:$estr}; },$_.__params__ = ["msg"],$_)
};
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__ : true, __constructs__ : ["DPackage","DImport","DClass","DTypedef"]
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
};
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__ : true, __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"]
	,APublic: {_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__ : true, __constructs__ : ["KFunction","KVar"]
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__ : true, __constructs__ : ["SBreak","SContinue","SReturn"]
	,SBreak: {_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
var hscript_Interp = function() {
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	this.resetVariables();
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = true;
hscript_Interp.prototype = {
	resetVariables: function() {
		var _gthis = this;
		this.variables = new haxe_ds_StringMap();
		this.variables.set("null",null);
		this.variables.set("true",true);
		this.variables.set("false",false);
		this.variables.set("trace",Reflect.makeVarArgs(function(el) {
			var inf = _gthis.posInfos();
			var v = el.shift();
			if(el.length > 0) {
				inf.customParams = el;
			}
			haxe_Log.trace(Std.string(v),inf);
		}));
	}
	,posInfos: function() {
		if(this.curExpr != null) {
			return { fileName : this.curExpr.origin, lineNumber : this.curExpr.line};
		}
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		this.binops.h["+"] = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		this.binops.h["-"] = function(e1,e2) {
			return me.expr(e1) - me.expr(e2);
		};
		this.binops.h["*"] = function(e1,e2) {
			return me.expr(e1) * me.expr(e2);
		};
		this.binops.h["/"] = function(e1,e2) {
			return me.expr(e1) / me.expr(e2);
		};
		this.binops.h["%"] = function(e1,e2) {
			return me.expr(e1) % me.expr(e2);
		};
		this.binops.h["&"] = function(e1,e2) {
			return me.expr(e1) & me.expr(e2);
		};
		this.binops.h["|"] = function(e1,e2) {
			return me.expr(e1) | me.expr(e2);
		};
		this.binops.h["^"] = function(e1,e2) {
			return me.expr(e1) ^ me.expr(e2);
		};
		this.binops.h["<<"] = function(e1,e2) {
			return me.expr(e1) << me.expr(e2);
		};
		this.binops.h[">>"] = function(e1,e2) {
			return me.expr(e1) >> me.expr(e2);
		};
		this.binops.h[">>>"] = function(e1,e2) {
			return me.expr(e1) >>> me.expr(e2);
		};
		this.binops.h["=="] = function(e1,e2) {
			return me.expr(e1) == me.expr(e2);
		};
		this.binops.h["!="] = function(e1,e2) {
			return me.expr(e1) != me.expr(e2);
		};
		this.binops.h[">="] = function(e1,e2) {
			return me.expr(e1) >= me.expr(e2);
		};
		this.binops.h["<="] = function(e1,e2) {
			return me.expr(e1) <= me.expr(e2);
		};
		this.binops.h[">"] = function(e1,e2) {
			return me.expr(e1) > me.expr(e2);
		};
		this.binops.h["<"] = function(e1,e2) {
			return me.expr(e1) < me.expr(e2);
		};
		this.binops.h["||"] = function(e1,e2) {
			if(me.expr(e1) != true) {
				return me.expr(e2) == true;
			} else {
				return true;
			}
		};
		this.binops.h["&&"] = function(e1,e2) {
			if(me.expr(e1) == true) {
				return me.expr(e2) == true;
			} else {
				return false;
			}
		};
		this.binops.h["="] = $bind(this,this.assign);
		this.binops.h["..."] = function(e1,e2) {
			return new IntIterator(me.expr(e1),me.expr(e2));
		};
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v1,v2) {
			return v1 - v2;
		});
		this.assignOp("*=",function(v1,v2) {
			return v1 * v2;
		});
		this.assignOp("/=",function(v1,v2) {
			return v1 / v2;
		});
		this.assignOp("%=",function(v1,v2) {
			return v1 % v2;
		});
		this.assignOp("&=",function(v1,v2) {
			return v1 & v2;
		});
		this.assignOp("|=",function(v1,v2) {
			return v1 | v2;
		});
		this.assignOp("^=",function(v1,v2) {
			return v1 ^ v2;
		});
		this.assignOp("<<=",function(v1,v2) {
			return v1 << v2;
		});
		this.assignOp(">>=",function(v1,v2) {
			return v1 >> v2;
		});
		this.assignOp(">>>=",function(v1,v2) {
			return v1 >>> v2;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		var _g = e1.e;
		switch(_g._hx_index) {
		case 1:
			var id = _g.v;
			var l = this.locals.h[id];
			if(l == null) {
				this.variables.set(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = _g.f;
			var e = _g.e;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = _g.index;
			var e = _g.e;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e = new hscript_Error(hscript_ErrorDef.EInvalidOp("="),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		this.binops.h[op] = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		var _g = e1.e;
		switch(_g._hx_index) {
		case 1:
			var id = _g.v;
			var l = this.locals.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				this.variables.set(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = _g.f;
			var e = _g.e;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = _g.index;
			var e = _g.e;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e = new hscript_Error(hscript_ErrorDef.EInvalidOp(op),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		this.curExpr = e;
		var e1 = e.e;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var l = this.locals.h[id];
			var v = l == null ? this.variables.get(id) : l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					this.variables.set(id,v);
				} else {
					l.r = v;
				}
			} else if(l == null) {
				this.variables.set(id,v + delta);
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e1.f;
			var e = e1.e;
			var obj = this.expr(e);
			var v = this.get(obj,f);
			if(prefix) {
				v += delta;
				this.set(obj,f,v);
			} else {
				this.set(obj,f,v + delta);
			}
			return v;
		case 16:
			var index = e1.index;
			var e = e1.e;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				var v = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v + delta);
				}
				return v;
			} else {
				var v = arr[index1];
				if(prefix) {
					v += delta;
					arr[index1] = v;
				} else {
					arr[index1] = v + delta;
				}
				return v;
			}
			break;
		default:
			var e = new hscript_Error(hscript_ErrorDef.EInvalidOp(delta > 0 ? "++" : "--"),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var e = _g1;
				switch(e._hx_index) {
				case 0:
					throw haxe_Exception.thrown("Invalid break");
				case 1:
					throw haxe_Exception.thrown("Invalid continue");
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw _g;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = haxe_ds_StringMap.keysIterator(h.h);
		while(k.hasNext()) {
			var k1 = k.next();
			h2.h[k1] = h.h[k1];
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			this.locals.h[d.n] = d.old;
		}
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		var e1 = new hscript_Error(e,this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
		if(rethrow) {
			throw haxe_Exception.thrown(e1);
		} else {
			throw haxe_Exception.thrown(e1);
		}
	}
	,rethrow: function(e) {
		throw haxe_Exception.thrown(e);
	}
	,resolve: function(id) {
		var l = this.locals.h[id];
		if(l != null) {
			return l.r;
		}
		var v = this.variables.get(id);
		if(v == null && !this.variables.exists(id)) {
			var e = new hscript_Error(hscript_ErrorDef.EUnknownVariable(id),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		this.curExpr = e;
		var e1 = e.e;
		switch(e1._hx_index) {
		case 0:
			var c = e1.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e1.v;
			return this.resolve(id);
		case 2:
			var _g = e1.t;
			var e = e1.e;
			var n = e1.n;
			this.declared.push({ n : n, old : this.locals.h[n]});
			var this1 = this.locals;
			var value = e == null ? null : this.expr(e);
			this1.h[n] = { r : value};
			return null;
		case 3:
			var e = e1.e;
			return this.expr(e);
		case 4:
			var exprs = e1.e;
			var old = this.declared.length;
			var v = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e = exprs[_g];
				++_g;
				v = this.expr(e);
			}
			this.restore(old);
			return v;
		case 5:
			var f = e1.f;
			var e = e1.e;
			return this.get(this.expr(e),f);
		case 6:
			var e2 = e1.e2;
			var e11 = e1.e1;
			var op = e1.op;
			var fop = this.binops.h[op];
			if(fop == null) {
				var e = new hscript_Error(hscript_ErrorDef.EInvalidOp(op),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
				throw haxe_Exception.thrown(e);
			}
			return fop(e11,e2);
		case 7:
			var e = e1.e;
			var prefix = e1.prefix;
			var op = e1.op;
			switch(op) {
			case "!":
				return this.expr(e) != true;
			case "++":
				return this.increment(e,prefix,1);
			case "-":
				return -this.expr(e);
			case "--":
				return this.increment(e,prefix,-1);
			case "~":
				return ~this.expr(e);
			default:
				var e = new hscript_Error(hscript_ErrorDef.EInvalidOp(op),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
				throw haxe_Exception.thrown(e);
			}
			break;
		case 8:
			var params = e1.params;
			var e = e1.e;
			var args = [];
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				args.push(this.expr(p));
			}
			var _g = e.e;
			if(_g._hx_index == 5) {
				var f = _g.f;
				var e2 = _g.e;
				var obj = this.expr(e2);
				if(obj == null) {
					var e2 = new hscript_Error(hscript_ErrorDef.EInvalidAccess(f),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
					throw haxe_Exception.thrown(e2);
				}
				return this.fcall(obj,f,args);
			} else {
				return this.call(null,this.expr(e),args);
			}
			break;
		case 9:
			var e2 = e1.e2;
			var e11 = e1.e1;
			var econd = e1.cond;
			if(this.expr(econd) == true) {
				return this.expr(e11);
			} else if(e2 == null) {
				return null;
			} else {
				return this.expr(e2);
			}
			break;
		case 10:
			var e = e1.e;
			var econd = e1.cond;
			this.whileLoop(econd,e);
			return null;
		case 11:
			var e = e1.e;
			var it = e1.it;
			var v = e1.v;
			this.forLoop(v,it,e);
			return null;
		case 12:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SBreak);
		case 13:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SContinue);
		case 14:
			var _g = e1.ret;
			var name = e1.name;
			var fexpr = e1.e;
			var params = e1.args;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				if(p.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f = function(args) {
				if((args == null ? 0 : args.length) != params.length) {
					if(args.length < minParams) {
						var str = "Invalid number of parameters. Got " + args.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						var e = new hscript_Error(hscript_ErrorDef.ECustom(str),_gthis.curExpr.pmin,_gthis.curExpr.pmax,_gthis.curExpr.origin,_gthis.curExpr.line);
						throw haxe_Exception.thrown(e);
					}
					var args2 = [];
					var extraParams = args.length - minParams;
					var pos = 0;
					var _g = 0;
					while(_g < params.length) {
						var p = params[_g];
						++_g;
						if(p.opt) {
							if(extraParams > 0) {
								args2.push(args[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args[pos++]);
						}
					}
					args = args2;
				}
				var old = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g = 0;
				var _g1 = params.length;
				while(_g < _g1) {
					var i = _g++;
					me.locals.h[params[i].name] = { r : args[i]};
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( _g ) {
						var e = haxe_Exception.caught(_g).unwrap();
						me.locals = old;
						me.depth = depth;
						throw haxe_Exception.thrown(e);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old;
				me.depth = depth;
				return r;
			};
			var f1 = Reflect.makeVarArgs(f);
			if(name != null) {
				if(this.depth == 0) {
					this.variables.set(name,f1);
				} else {
					this.declared.push({ n : name, old : this.locals.h[name]});
					var ref = { r : f1};
					this.locals.h[name] = ref;
					capturedLocals.h[name] = ref;
				}
			}
			return f1;
		case 15:
			var e = e1.e;
			this.returnValue = e == null ? null : this.expr(e);
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SReturn);
		case 16:
			var index = e1.index;
			var e = e1.e;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr = e1.e;
			var tmp;
			if(arr.length > 0) {
				var _g = arr[0].e;
				if(_g._hx_index == 6) {
					var _g1 = _g.e2;
					var _g1 = _g.e1;
					tmp = _g.op == "=>";
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g = 0;
				while(_g < arr.length) {
					var e = arr[_g];
					++_g;
					var _g1 = e.e;
					if(_g1._hx_index == 6) {
						if(_g1.op == "=>") {
							var eValue = _g1.e2;
							var eKey = _g1.e1;
							var key = this.expr(eKey);
							var value = this.expr(eValue);
							isAllString = isAllString && typeof(key) == "string";
							isAllInt = isAllInt && (typeof(key) == "number" && ((key | 0) === key));
							isAllObject = isAllObject && Reflect.isObject(key);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key);
							keys.push(key);
							values.push(value);
						} else {
							throw haxe_Exception.thrown("=> expected");
						}
					} else {
						throw haxe_Exception.thrown("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw haxe_Exception.thrown("Inconsistent key types");
				}
				var _g = 0;
				var _g1 = keys.length;
				while(_g < _g1) {
					var n = _g++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n],values[n]);
				}
				return map;
			} else {
				var a = [];
				var _g = 0;
				while(_g < arr.length) {
					var e = arr[_g];
					++_g;
					a.push(this.expr(e));
				}
				return a;
			}
			break;
		case 18:
			var params1 = e1.params;
			var cl = e1.cl;
			var a = [];
			var _g = 0;
			while(_g < params1.length) {
				var e = params1[_g];
				++_g;
				a.push(this.expr(e));
			}
			return this.cnew(cl,a);
		case 19:
			var e = e1.e;
			throw haxe_Exception.thrown(this.expr(e));
		case 20:
			var _g = e1.t;
			var ecatch = e1.ecatch;
			var n = e1.v;
			var e = e1.e;
			var old = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v = this.expr(e);
				this.restore(old);
				this.inTry = oldTry;
				return v;
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					this.inTry = oldTry;
					throw haxe_Exception.thrown(err);
				} else {
					var err = _g1;
					this.restore(old);
					this.inTry = oldTry;
					this.declared.push({ n : n, old : this.locals.h[n]});
					this.locals.h[n] = { r : err};
					var v = this.expr(ecatch);
					this.restore(old);
					return v;
				}
			}
			break;
		case 21:
			var fl = e1.fl;
			var o = { };
			var _g = 0;
			while(_g < fl.length) {
				var f = fl[_g];
				++_g;
				this.set(o,f.name,this.expr(f.e));
			}
			return o;
		case 22:
			var e2 = e1.e2;
			var e11 = e1.e1;
			var econd = e1.cond;
			if(this.expr(econd) == true) {
				return this.expr(e11);
			} else {
				return this.expr(e2);
			}
			break;
		case 23:
			var def = e1.defaultExpr;
			var cases = e1.cases;
			var e = e1.e;
			var val = this.expr(e);
			var match = false;
			var _g = 0;
			while(_g < cases.length) {
				var c = cases[_g];
				++_g;
				var _g1 = 0;
				var _g2 = c.values;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(this.expr(v) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var e = e1.e;
			var econd = e1.cond;
			this.doWhileLoop(econd,e);
			return null;
		case 25:
			var _g = e1.args;
			var _g = e1.name;
			var e = e1.e;
			return this.expr(e);
		case 26:
			var _g = e1.t;
			var e = e1.e;
			return this.expr(e);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var err = _g1;
				switch(err._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw haxe_Exception.thrown(err);
				}
			} else {
				throw _g;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( _g ) {
		}
		if(v.hasNext == null || v.next == null) {
			var e = new hscript_Error(hscript_ErrorDef.EInvalidIterator(v),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		this.declared.push({ n : n, old : this.locals.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			this1.h[n] = value;
			try {
				this.expr(e);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__implements(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = new hscript_Error(hscript_ErrorDef.EInvalidAccess(f),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = new hscript_Error(hscript_ErrorDef.EInvalidAccess(f),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw haxe_Exception.thrown(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__ : true, __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"]
	,TEof: {_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			this.opPriority.h[x] = i;
			if(i == 9) {
				this.opRightAssoc.h[x] = true;
			}
		}
	}
	var x = "!";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "++";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "--";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "-";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "~";
	this.unops.h[x] = x == "++" || x == "--";
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = true;
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(new hscript_Error(err,pmin,pmax,this.origin,this.line));
		}
	}
	,invalidChar: function(c) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EInvalidChar(c),this.readPos - 1,this.readPos - 1,this.origin,this.line));
		}
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.origin = origin;
		this.readPos = 0;
		this.tokenMin = this.oldTokenMin = 0;
		this.tokenMax = this.oldTokenMax = 0;
		this.tokens = new haxe_ds_List();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g = 0;
		var _g1 = this.identChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.idents[HxOverrides.cca(this.identChars,i)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		this.readPos = 0;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			var e = hscript_ExprDef.EBlock(a);
			var pmin = 0;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
		}
	}
	,unexpected: function(tk) {
		var err = hscript_ErrorDef.EUnexpected(this.tokenString(tk));
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(new hscript_Error(err,this.tokenMin,this.tokenMax,this.origin,this.line));
		}
		return null;
	}
	,push: function(tk) {
		this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
		this.tokenMin = this.oldTokenMin;
		this.tokenMax = this.oldTokenMax;
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
		this.tokenMin = this.oldTokenMin;
		this.tokenMax = this.oldTokenMax;
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e.e;
	}
	,pmin: function(e) {
		if(e == null) {
			return 0;
		} else {
			return e.pmin;
		}
	}
	,pmax: function(e) {
		if(e == null) {
			return 0;
		} else {
			return e.pmax;
		}
	}
	,mk: function(e,pmin,pmax) {
		if(e == null) {
			return null;
		}
		if(pmin == null) {
			pmin = this.tokenMin;
		}
		if(pmax == null) {
			pmax = this.tokenMax;
		}
		return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
	}
	,isBlock: function(e) {
		if(e == null) {
			return false;
		}
		var _g = e.e;
		switch(_g._hx_index) {
		case 2:
			var _g1 = _g.n;
			var e = _g.e;
			var t = _g.t;
			if(e != null) {
				return this.isBlock(e);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t._hx_index == 2) {
					var _g1 = t.fields;
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			var _g1 = _g.e;
			return true;
		case 6:
			var _g1 = _g.e1;
			var _g1 = _g.op;
			var e = _g.e2;
			return this.isBlock(e);
		case 7:
			var _g1 = _g.op;
			var e = _g.e;
			var prefix = _g.prefix;
			if(!prefix) {
				return this.isBlock(e);
			} else {
				return false;
			}
			break;
		case 9:
			var _g1 = _g.cond;
			var e2 = _g.e2;
			var e1 = _g.e1;
			if(e2 != null) {
				return this.isBlock(e2);
			} else {
				return this.isBlock(e1);
			}
			break;
		case 10:
			var _g1 = _g.cond;
			var e = _g.e;
			return this.isBlock(e);
		case 11:
			var _g1 = _g.it;
			var _g1 = _g.v;
			var e = _g.e;
			return this.isBlock(e);
		case 14:
			var _g1 = _g.ret;
			var _g1 = _g.name;
			var _g1 = _g.args;
			var e = _g.e;
			return this.isBlock(e);
		case 15:
			var e = _g.e;
			if(e != null) {
				return this.isBlock(e);
			} else {
				return false;
			}
			break;
		case 20:
			var _g1 = _g.t;
			var _g1 = _g.v;
			var _g1 = _g.e;
			var e = _g.ecatch;
			return this.isBlock(e);
		case 21:
			var _g1 = _g.fl;
			return true;
		case 23:
			var _g1 = _g.defaultExpr;
			var _g1 = _g.cases;
			var _g1 = _g.e;
			return true;
		case 24:
			var _g1 = _g.cond;
			var e = _g.e;
			return this.isBlock(e);
		case 25:
			var _g1 = _g.args;
			var _g1 = _g.name;
			var e = _g.e;
			return this.isBlock(e);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(true) {
			var tmp;
			if(tk == hscript_Token.TComma && e != null) {
				var _g = e.e;
				if(_g._hx_index == 2) {
					var _g1 = _g.e;
					var _g2 = _g.t;
					var _g3 = _g.n;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				if(!this.allowJSON) {
					this.unexpected(tk);
				}
				if(c._hx_index == 2) {
					var s = c.s;
					id = s;
				} else {
					this.unexpected(tk);
				}
				break;
			case 2:
				var i = tk.s;
				id = i;
				break;
			case 7:
				break _hx_loop1;
			default:
				this.unexpected(tk);
				break _hx_loop1;
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			switch(tk._hx_index) {
			case 7:
				break _hx_loop1;
			case 9:
				break;
			default:
				this.unexpected(tk);
			}
		}
		var e = hscript_ExprDef.EObject(fl);
		var pmin = p1;
		var pmax = null;
		var tmp;
		if(e == null) {
			tmp = null;
		} else {
			if(pmin == null) {
				pmin = this.tokenMin;
			}
			if(pmax == null) {
				pmax = this.tokenMax;
			}
			tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
		}
		return this.parseExprNext(tmp);
	}
	,parseExpr: function() {
		var tk = this.token();
		var p1 = this.tokenMin;
		switch(tk._hx_index) {
		case 1:
			var c = tk.c;
			var e = hscript_ExprDef.EConst(c);
			var pmin = null;
			var pmax = null;
			var tmp;
			if(e == null) {
				tmp = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp);
		case 2:
			var id = tk.s;
			var e = this.parseStructure(id);
			if(e == null) {
				var e1 = hscript_ExprDef.EIdent(id);
				var pmin = null;
				var pmax = null;
				if(e1 == null) {
					e = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					e = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			}
			return this.parseExprNext(e);
		case 3:
			var op = tk.s;
			if(Object.prototype.hasOwnProperty.call(this.unops.h,op)) {
				var start = this.tokenMin;
				var e = this.parseExpr();
				if(op == "-" && e != null) {
					var _g = e.e;
					if(_g._hx_index == 0) {
						var _g1 = _g.c;
						switch(_g1._hx_index) {
						case 0:
							var i = _g1.v;
							var e1 = hscript_ExprDef.EConst(hscript_Const.CInt(-i));
							var pmin = start;
							var pmax = e == null ? 0 : e.pmax;
							if(e1 == null) {
								return null;
							} else {
								if(pmin == null) {
									pmin = this.tokenMin;
								}
								if(pmax == null) {
									pmax = this.tokenMax;
								}
								return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
							}
							break;
						case 1:
							var f = _g1.f;
							var e1 = hscript_ExprDef.EConst(hscript_Const.CFloat(-f));
							var pmin = start;
							var pmax = e == null ? 0 : e.pmax;
							if(e1 == null) {
								return null;
							} else {
								if(pmin == null) {
									pmin = this.tokenMin;
								}
								if(pmax == null) {
									pmax = this.tokenMax;
								}
								return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
							}
							break;
						default:
						}
					}
				}
				return this.makeUnop(op,e);
			}
			return this.unexpected(tk);
		case 4:
			var e = this.parseExpr();
			tk = this.token();
			switch(tk._hx_index) {
			case 5:
				var e1 = hscript_ExprDef.EParent(e);
				var pmin = p1;
				var pmax = this.tokenMax;
				var tmp;
				if(e1 == null) {
					tmp = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					tmp = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				return this.parseExprNext(tmp);
			case 9:
				var _g = e.e;
				if(_g._hx_index == 1) {
					var v = _g.v;
					return this.parseLambda([{ name : v}],e == null ? 0 : e.pmin);
				}
				break;
			case 14:
				var t = this.parseType();
				tk = this.token();
				switch(tk._hx_index) {
				case 5:
					var e1 = hscript_ExprDef.ECheckType(e,t);
					var pmin = p1;
					var pmax = this.tokenMax;
					var tmp;
					if(e1 == null) {
						tmp = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						tmp = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					return this.parseExprNext(tmp);
				case 9:
					var _g = e.e;
					if(_g._hx_index == 1) {
						var v = _g.v;
						return this.parseLambda([{ name : v, t : t}],e == null ? 0 : e.pmin);
					}
					break;
				default:
				}
				break;
			default:
			}
			return this.unexpected(tk);
		case 6:
			tk = this.token();
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				if(this.allowJSON) {
					if(c._hx_index == 2) {
						var _g = c.s;
						var tk2 = this.token();
						this.tokens.push({ t : tk2, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
						this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
						if(tk2._hx_index == 14) {
							return this.parseExprNext(this.parseObject(p1));
						}
					} else {
						this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
				} else {
					this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
				break;
			case 2:
				var _g = tk.s;
				var tk2 = this.token();
				this.tokens.push({ t : tk2, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				if(tk2._hx_index == 14) {
					return this.parseExprNext(this.parseObject(p1));
				}
				break;
			case 7:
				var e = hscript_ExprDef.EObject([]);
				var pmin = p1;
				var pmax = null;
				var tmp;
				if(e == null) {
					tmp = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				return this.parseExprNext(tmp);
			default:
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var a = [];
			while(true) {
				this.parseFullExpr(a);
				tk = this.token();
				if(tk == hscript_Token.TBrClose || this.resumeErrors && tk == hscript_Token.TEof) {
					break;
				}
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var e = hscript_ExprDef.EBlock(a);
			var pmin = p1;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case 11:
			var a = [];
			tk = this.token();
			while(tk != hscript_Token.TBkClose && (!this.resumeErrors || tk != hscript_Token.TEof)) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				a.push(this.parseExpr());
				tk = this.token();
				if(tk == hscript_Token.TComma) {
					tk = this.token();
				}
			}
			if(a.length == 1 && a[0] != null) {
				var _g = a[0].e;
				switch(_g._hx_index) {
				case 10:
					var _g1 = _g.e;
					var _g1 = _g.cond;
					var tmp = "__a_" + this.uid++;
					var e = hscript_ExprDef.EArrayDecl([]);
					var pmin = p1;
					var pmax = null;
					var e1;
					if(e == null) {
						e1 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = hscript_ExprDef.EVar(tmp,null,e1);
					var pmin = p1;
					var pmax = null;
					var e1;
					if(e == null) {
						e1 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = this.mapCompr(tmp,a[0]);
					var e2 = hscript_ExprDef.EIdent(tmp);
					var pmin = p1;
					var pmax = null;
					var e3;
					if(e2 == null) {
						e3 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e3 = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e2 = hscript_ExprDef.EBlock([e1,e,e3]);
					var pmin = p1;
					var pmax = null;
					var e;
					if(e2 == null) {
						e = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					return this.parseExprNext(e);
				case 11:
					var _g1 = _g.e;
					var _g1 = _g.it;
					var _g1 = _g.v;
					var tmp = "__a_" + this.uid++;
					var e = hscript_ExprDef.EArrayDecl([]);
					var pmin = p1;
					var pmax = null;
					var e1;
					if(e == null) {
						e1 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = hscript_ExprDef.EVar(tmp,null,e1);
					var pmin = p1;
					var pmax = null;
					var e1;
					if(e == null) {
						e1 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = this.mapCompr(tmp,a[0]);
					var e2 = hscript_ExprDef.EIdent(tmp);
					var pmin = p1;
					var pmax = null;
					var e3;
					if(e2 == null) {
						e3 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e3 = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e2 = hscript_ExprDef.EBlock([e1,e,e3]);
					var pmin = p1;
					var pmax = null;
					var e;
					if(e2 == null) {
						e = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					return this.parseExprNext(e);
				case 24:
					var _g1 = _g.e;
					var _g1 = _g.cond;
					var tmp = "__a_" + this.uid++;
					var e = hscript_ExprDef.EArrayDecl([]);
					var pmin = p1;
					var pmax = null;
					var e1;
					if(e == null) {
						e1 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = hscript_ExprDef.EVar(tmp,null,e1);
					var pmin = p1;
					var pmax = null;
					var e1;
					if(e == null) {
						e1 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = this.mapCompr(tmp,a[0]);
					var e2 = hscript_ExprDef.EIdent(tmp);
					var pmin = p1;
					var pmax = null;
					var e3;
					if(e2 == null) {
						e3 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e3 = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e2 = hscript_ExprDef.EBlock([e1,e,e3]);
					var pmin = p1;
					var pmax = null;
					var e;
					if(e2 == null) {
						e = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					return this.parseExprNext(e);
				default:
				}
			}
			var e = hscript_ExprDef.EArrayDecl(a);
			var pmin = p1;
			var pmax = null;
			var tmp;
			if(e == null) {
				tmp = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp);
		case 15:
			var id = tk.s;
			if(this.allowMetadata) {
				var args = this.parseMetaArgs();
				var e = hscript_ExprDef.EMeta(id,args,this.parseExpr());
				var pmin = p1;
				var pmax = null;
				if(e == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			} else {
				return this.unexpected(tk);
			}
			break;
		default:
			return this.unexpected(tk);
		}
	}
	,parseLambda: function(args,pmin) {
		_hx_loop1: while(true) {
			var id = this.getIdent();
			var t = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
			args.push({ name : id, t : t});
			var tk = this.token();
			switch(tk._hx_index) {
			case 5:
				break _hx_loop1;
			case 9:
				break;
			default:
				this.unexpected(tk);
				break _hx_loop1;
			}
		}
		var t = this.token();
		if(!Type.enumEq(t,hscript_Token.TOp("->"))) {
			this.unexpected(t);
		}
		var eret = this.parseExpr();
		var e = hscript_ExprDef.EReturn(eret);
		var pmin1 = pmin;
		var pmax = null;
		var e1;
		if(e == null) {
			e1 = null;
		} else {
			if(pmin1 == null) {
				pmin1 = this.tokenMin;
			}
			if(pmax == null) {
				pmax = this.tokenMax;
			}
			e1 = { e : e, pmin : pmin1, pmax : pmax, origin : this.origin, line : this.line};
		}
		var e = hscript_ExprDef.EFunction(args,e1);
		var pmin1 = pmin;
		var pmax = null;
		if(e == null) {
			return null;
		} else {
			if(pmin1 == null) {
				pmin1 = this.tokenMin;
			}
			if(pmax == null) {
				pmax = this.tokenMax;
			}
			return { e : e, pmin : pmin1, pmax : pmax, origin : this.origin, line : this.line};
		}
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				switch(_g._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					var tk = _g;
					this.unexpected(tk);
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		if(e == null) {
			return null;
		}
		var edef;
		var _g = e.e;
		switch(_g._hx_index) {
		case 3:
			var e2 = _g.e;
			edef = hscript_ExprDef.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			var _g1 = _g.e;
			if(_g1.length == 1) {
				var e1 = _g1[0];
				edef = hscript_ExprDef.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				var e1 = hscript_ExprDef.EIdent(tmp);
				var pmin = e == null ? 0 : e.pmin;
				var pmax = e == null ? 0 : e.pmax;
				var e2;
				if(e1 == null) {
					e2 = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					e2 = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				var e1 = hscript_ExprDef.EField(e2,"push");
				var pmin = e == null ? 0 : e.pmin;
				var pmax = e == null ? 0 : e.pmax;
				var edef1;
				if(e1 == null) {
					edef1 = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					edef1 = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				edef = hscript_ExprDef.ECall(edef1,[e]);
			}
			break;
		case 9:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var cond = _g.cond;
			if(e2 == null) {
				edef = hscript_ExprDef.EIf(cond,this.mapCompr(tmp,e1),null);
			} else {
				var e1 = hscript_ExprDef.EIdent(tmp);
				var pmin = e == null ? 0 : e.pmin;
				var pmax = e == null ? 0 : e.pmax;
				var e2;
				if(e1 == null) {
					e2 = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					e2 = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				var e1 = hscript_ExprDef.EField(e2,"push");
				var pmin = e == null ? 0 : e.pmin;
				var pmax = e == null ? 0 : e.pmax;
				var edef1;
				if(e1 == null) {
					edef1 = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					edef1 = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				edef = hscript_ExprDef.ECall(edef1,[e]);
			}
			break;
		case 10:
			var e2 = _g.e;
			var cond = _g.cond;
			edef = hscript_ExprDef.EWhile(cond,this.mapCompr(tmp,e2));
			break;
		case 11:
			var e2 = _g.e;
			var it = _g.it;
			var v = _g.v;
			edef = hscript_ExprDef.EFor(v,it,this.mapCompr(tmp,e2));
			break;
		case 24:
			var e2 = _g.e;
			var cond = _g.cond;
			edef = hscript_ExprDef.EDoWhile(cond,this.mapCompr(tmp,e2));
			break;
		default:
			var e1 = hscript_ExprDef.EIdent(tmp);
			var pmin = e == null ? 0 : e.pmin;
			var pmax = e == null ? 0 : e.pmax;
			var e2;
			if(e1 == null) {
				e2 = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				e2 = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			var e1 = hscript_ExprDef.EField(e2,"push");
			var pmin = e == null ? 0 : e.pmin;
			var pmax = e == null ? 0 : e.pmax;
			var edef1;
			if(e1 == null) {
				edef1 = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				edef1 = { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			edef = hscript_ExprDef.ECall(edef1,[e]);
		}
		var pmin = e == null ? 0 : e.pmin;
		var pmax = e == null ? 0 : e.pmax;
		if(edef == null) {
			return null;
		} else {
			if(pmin == null) {
				pmin = this.tokenMin;
			}
			if(pmax == null) {
				pmax = this.tokenMax;
			}
			return { e : edef, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
		}
	}
	,makeUnop: function(op,e) {
		if(e == null && this.resumeErrors) {
			return null;
		}
		var _g = e.e;
		switch(_g._hx_index) {
		case 6:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var bop = _g.op;
			var e3 = hscript_ExprDef.EBinop(bop,this.makeUnop(op,e1),e2);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = e2 == null ? 0 : e2.pmax;
			if(e3 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e3, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case 22:
			var e3 = _g.e2;
			var e2 = _g.e1;
			var e1 = _g.cond;
			var e4 = hscript_ExprDef.ETernary(this.makeUnop(op,e1),e2,e3);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = e3 == null ? 0 : e3.pmax;
			if(e4 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e4, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		default:
			var e1 = hscript_ExprDef.EUnop(op,true,e);
			var pmin = e == null ? 0 : e.pmin;
			var pmax = e == null ? 0 : e.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
		}
	}
	,makeBinop: function(op,e1,e) {
		if(e == null && this.resumeErrors) {
			var e2 = hscript_ExprDef.EBinop(op,e1,e);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = e1 == null ? 0 : e1.pmax;
			if(e2 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
		}
		var _g = e.e;
		switch(_g._hx_index) {
		case 6:
			var e3 = _g.e2;
			var e2 = _g.e1;
			var op2 = _g.op;
			if(this.opPriority.h[op] <= this.opPriority.h[op2] && !Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
				var e4 = hscript_ExprDef.EBinop(op2,this.makeBinop(op,e1,e2),e3);
				var pmin = e1 == null ? 0 : e1.pmin;
				var pmax = e3 == null ? 0 : e3.pmax;
				if(e4 == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e4, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			} else {
				var e2 = hscript_ExprDef.EBinop(op,e1,e);
				var pmin = e1 == null ? 0 : e1.pmin;
				var pmax = e == null ? 0 : e.pmax;
				if(e2 == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			}
			break;
		case 22:
			var e4 = _g.e2;
			var e3 = _g.e1;
			var e2 = _g.cond;
			if(Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
				var e5 = hscript_ExprDef.EBinop(op,e1,e);
				var pmin = e1 == null ? 0 : e1.pmin;
				var pmax = e == null ? 0 : e.pmax;
				if(e5 == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e5, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			} else {
				var e5 = hscript_ExprDef.ETernary(this.makeBinop(op,e1,e2),e3,e4);
				var pmin = e1 == null ? 0 : e1.pmin;
				var pmax = e == null ? 0 : e.pmax;
				if(e5 == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e5, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			}
			break;
		default:
			var e2 = hscript_ExprDef.EBinop(op,e1,e);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = e == null ? 0 : e.pmax;
			if(e2 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
		}
	}
	,parseStructure: function(id) {
		var p1 = this.tokenMin;
		switch(id) {
		case "break":
			var e = hscript_ExprDef.EBreak;
			var pmin = null;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "continue":
			var e = hscript_ExprDef.EContinue;
			var pmin = null;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			var e1 = hscript_ExprDef.EDoWhile(econd,e);
			var pmin = p1;
			var pmax = econd == null ? 0 : econd.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TId("in"))) {
				this.unexpected(t);
			}
			var eiter = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e = this.parseExpr();
			var e1 = hscript_ExprDef.EFor(vname,eiter,e);
			var pmin = p1;
			var pmax = e == null ? 0 : e.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "function":
			var tk = this.token();
			var name = null;
			if(tk._hx_index == 2) {
				var id = tk.s;
				name = id;
			} else {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var inf = this.parseFunctionDecl();
			var e = hscript_ExprDef.EFunction(inf.args,inf.body,name,inf.ret);
			var pmin = p1;
			var e1 = inf.body;
			var pmax = e1 == null ? 0 : e1.pmax;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "if":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var cond = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e1 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk = this.token();
			if(tk == hscript_Token.TSemicolon) {
				semic = true;
				tk = this.token();
			}
			if(Type.enumEq(tk,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				if(semic) {
					this.tokens.push({ t : hscript_Token.TSemicolon, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
			}
			var e = hscript_ExprDef.EIf(cond,e1,e2);
			var pmin = p1;
			var pmax = e2 == null ? this.tokenMax : e2 == null ? 0 : e2.pmax;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			_hx_loop1: while(true) {
				var tk = this.token();
				switch(tk._hx_index) {
				case 4:
					break _hx_loop1;
				case 8:
					a.push(this.getIdent());
					break;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			var e = hscript_ExprDef.ENew(a.join("."),args);
			var pmin = p1;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "return":
			var tk = this.token();
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			var e = tk == hscript_Token.TSemicolon ? null : this.parseExpr();
			var e1 = hscript_ExprDef.EReturn(e);
			var pmin = p1;
			var pmax = e == null ? this.tokenMax : e == null ? 0 : e.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "switch":
			var e = this.parseExpr();
			var def = null;
			var cases = [];
			var t = this.token();
			if(t != hscript_Token.TBrOpen) {
				this.unexpected(t);
			}
			_hx_loop2: while(true) {
				var tk = this.token();
				switch(tk._hx_index) {
				case 2:
					switch(tk.s) {
					case "case":
						var c = { values : [], expr : null};
						cases.push(c);
						_hx_loop3: while(true) {
							var e1 = this.parseExpr();
							c.values.push(e1);
							tk = this.token();
							switch(tk._hx_index) {
							case 9:
								break;
							case 14:
								break _hx_loop3;
							default:
								this.unexpected(tk);
								break _hx_loop3;
							}
						}
						var exprs = [];
						_hx_loop4: while(true) {
							tk = this.token();
							this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
							switch(tk._hx_index) {
							case 0:
								if(this.resumeErrors) {
									break _hx_loop4;
								} else {
									this.parseFullExpr(exprs);
								}
								break;
							case 2:
								switch(tk.s) {
								case "case":case "default":
									break _hx_loop4;
								default:
									this.parseFullExpr(exprs);
								}
								break;
							case 7:
								break _hx_loop4;
							default:
								this.parseFullExpr(exprs);
							}
						}
						var tmp;
						if(exprs.length == 1) {
							tmp = exprs[0];
						} else if(exprs.length == 0) {
							var e2 = hscript_ExprDef.EBlock([]);
							var pmin = this.tokenMin;
							var pmax = this.tokenMin;
							if(e2 == null) {
								tmp = null;
							} else {
								if(pmin == null) {
									pmin = this.tokenMin;
								}
								if(pmax == null) {
									pmax = this.tokenMax;
								}
								tmp = { e : e2, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
							}
						} else {
							var e3 = hscript_ExprDef.EBlock(exprs);
							var e4 = exprs[0];
							var pmin1 = e4 == null ? 0 : e4.pmin;
							var e5 = exprs[exprs.length - 1];
							var pmax1 = e5 == null ? 0 : e5.pmax;
							if(e3 == null) {
								tmp = null;
							} else {
								if(pmin1 == null) {
									pmin1 = this.tokenMin;
								}
								if(pmax1 == null) {
									pmax1 = this.tokenMax;
								}
								tmp = { e : e3, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
							}
						}
						c.expr = tmp;
						break;
					case "default":
						if(def != null) {
							this.unexpected(tk);
						}
						var t = this.token();
						if(t != hscript_Token.TDoubleDot) {
							this.unexpected(t);
						}
						var exprs1 = [];
						_hx_loop5: while(true) {
							tk = this.token();
							this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
							switch(tk._hx_index) {
							case 0:
								if(this.resumeErrors) {
									break _hx_loop5;
								} else {
									this.parseFullExpr(exprs1);
								}
								break;
							case 2:
								switch(tk.s) {
								case "case":case "default":
									break _hx_loop5;
								default:
									this.parseFullExpr(exprs1);
								}
								break;
							case 7:
								break _hx_loop5;
							default:
								this.parseFullExpr(exprs1);
							}
						}
						if(exprs1.length == 1) {
							def = exprs1[0];
						} else if(exprs1.length == 0) {
							var e6 = hscript_ExprDef.EBlock([]);
							var pmin2 = this.tokenMin;
							var pmax2 = this.tokenMin;
							if(e6 == null) {
								def = null;
							} else {
								if(pmin2 == null) {
									pmin2 = this.tokenMin;
								}
								if(pmax2 == null) {
									pmax2 = this.tokenMax;
								}
								def = { e : e6, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
							}
						} else {
							var e7 = hscript_ExprDef.EBlock(exprs1);
							var e8 = exprs1[0];
							var pmin3 = e8 == null ? 0 : e8.pmin;
							var e9 = exprs1[exprs1.length - 1];
							var pmax3 = e9 == null ? 0 : e9.pmax;
							if(e7 == null) {
								def = null;
							} else {
								if(pmin3 == null) {
									pmin3 = this.tokenMin;
								}
								if(pmax3 == null) {
									pmax3 = this.tokenMax;
								}
								def = { e : e7, pmin : pmin3, pmax : pmax3, origin : this.origin, line : this.line};
							}
						}
						break;
					default:
						this.unexpected(tk);
						break _hx_loop2;
					}
					break;
				case 7:
					break _hx_loop2;
				default:
					this.unexpected(tk);
					break _hx_loop2;
				}
			}
			var e1 = hscript_ExprDef.ESwitch(e,cases,def);
			var pmin = p1;
			var pmax = this.tokenMax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "throw":
			var e = this.parseExpr();
			var e1 = hscript_ExprDef.EThrow(e);
			var pmin = p1;
			var pmax = e == null ? 0 : e.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "try":
			var e = this.parseExpr();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TId("catch"))) {
				this.unexpected(t);
			}
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			var t = null;
			if(this.allowTypes) {
				t = this.parseType();
			} else {
				var t1 = this.token();
				if(!Type.enumEq(t1,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t1);
				}
			}
			var t1 = this.token();
			if(t1 != hscript_Token.TPClose) {
				this.unexpected(t1);
			}
			var ec = this.parseExpr();
			var e1 = hscript_ExprDef.ETry(e,vname,t,ec);
			var pmin = p1;
			var pmax = ec == null ? 0 : ec.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "var":
			var ident = this.getIdent();
			var tk = this.token();
			var t = null;
			if(tk == hscript_Token.TDoubleDot && this.allowTypes) {
				t = this.parseType();
				tk = this.token();
			}
			var e = null;
			if(Type.enumEq(tk,hscript_Token.TOp("="))) {
				e = this.parseExpr();
			} else {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var e1 = hscript_ExprDef.EVar(ident,t,e);
			var pmin = p1;
			var pmax = e == null ? this.tokenMax : e == null ? 0 : e.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "while":
			var econd = this.parseExpr();
			var e = this.parseExpr();
			var e1 = hscript_ExprDef.EWhile(econd,e);
			var pmin = p1;
			var pmax = e == null ? 0 : e.pmax;
			if(e1 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e1, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		switch(tk._hx_index) {
		case 3:
			var op = tk.s;
			if(op == "->") {
				var _g = e1.e;
				switch(_g._hx_index) {
				case 1:
					var i = _g.v;
					var eret = this.parseExpr();
					var e = hscript_ExprDef.EReturn(eret);
					var pmin = eret == null ? 0 : eret.pmin;
					var pmax = null;
					var e2;
					if(e == null) {
						e2 = null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						e2 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					var e = hscript_ExprDef.EFunction([{ name : i}],e2);
					var pmin = e1 == null ? 0 : e1.pmin;
					var pmax = null;
					if(e == null) {
						return null;
					} else {
						if(pmin == null) {
							pmin = this.tokenMin;
						}
						if(pmax == null) {
							pmax = this.tokenMax;
						}
						return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
					}
					break;
				case 3:
					var _hx_tmp = _g.e.e;
					if(_hx_tmp._hx_index == 1) {
						var i = _hx_tmp.v;
						var eret = this.parseExpr();
						var e = hscript_ExprDef.EReturn(eret);
						var pmin = eret == null ? 0 : eret.pmin;
						var pmax = null;
						var e2;
						if(e == null) {
							e2 = null;
						} else {
							if(pmin == null) {
								pmin = this.tokenMin;
							}
							if(pmax == null) {
								pmax = this.tokenMax;
							}
							e2 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
						}
						var e = hscript_ExprDef.EFunction([{ name : i}],e2);
						var pmin = e1 == null ? 0 : e1.pmin;
						var pmax = null;
						if(e == null) {
							return null;
						} else {
							if(pmin == null) {
								pmin = this.tokenMin;
							}
							if(pmax == null) {
								pmax = this.tokenMax;
							}
							return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
						}
					}
					break;
				case 26:
					var _hx_tmp = _g.e.e;
					if(_hx_tmp._hx_index == 1) {
						var t = _g.t;
						var i = _hx_tmp.v;
						var eret = this.parseExpr();
						var e = hscript_ExprDef.EReturn(eret);
						var pmin = eret == null ? 0 : eret.pmin;
						var pmax = null;
						var e2;
						if(e == null) {
							e2 = null;
						} else {
							if(pmin == null) {
								pmin = this.tokenMin;
							}
							if(pmax == null) {
								pmax = this.tokenMax;
							}
							e2 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
						}
						var e = hscript_ExprDef.EFunction([{ name : i, t : t}],e2);
						var pmin = e1 == null ? 0 : e1.pmin;
						var pmax = null;
						if(e == null) {
							return null;
						} else {
							if(pmin == null) {
								pmin = this.tokenMin;
							}
							if(pmax == null) {
								pmax = this.tokenMax;
							}
							return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
						}
					}
					break;
				default:
				}
				this.unexpected(tk);
			}
			if(this.unops.h[op]) {
				var tmp;
				if(!this.isBlock(e1)) {
					var _g = e1.e;
					if(_g._hx_index == 3) {
						var _g1 = _g.e;
						tmp = true;
					} else {
						tmp = false;
					}
				} else {
					tmp = true;
				}
				if(tmp) {
					this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
					return e1;
				}
				var e = hscript_ExprDef.EUnop(op,false,e1);
				var pmin = e1 == null ? 0 : e1.pmin;
				var pmax = null;
				var tmp;
				if(e == null) {
					tmp = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				return this.parseExprNext(tmp);
			}
			return this.makeBinop(op,e1,this.parseExpr());
		case 4:
			var e = hscript_ExprDef.ECall(e1,this.parseExprList(hscript_Token.TPClose));
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = null;
			var tmp;
			if(e == null) {
				tmp = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp);
		case 8:
			var field = this.getIdent();
			var e = hscript_ExprDef.EField(e1,field);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = null;
			var tmp;
			if(e == null) {
				tmp = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp);
		case 11:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TBkClose) {
				this.unexpected(t);
			}
			var e = hscript_ExprDef.EArray(e1,e2);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = null;
			var tmp;
			if(e == null) {
				tmp = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp);
		case 13:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			var e3 = this.parseExpr();
			var e = hscript_ExprDef.ETernary(e1,e2,e3);
			var pmin = e1 == null ? 0 : e1.pmin;
			var pmax = e3 == null ? 0 : e3.pmax;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		default:
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return e1;
		}
	}
	,parseFunctionArgs: function() {
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk._hx_index == 13) {
					opt = true;
					tk = this.token();
				}
				if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
					break;
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				switch(tk._hx_index) {
				case 5:
					done = true;
					break;
				case 9:
					tk = this.token();
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return args;
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = this.parseFunctionArgs();
		var ret = null;
		if(this.allowTypes) {
			var tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var _gthis = this;
		var t = this.token();
		switch(t._hx_index) {
		case 2:
			var v = t.s;
			this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			var path = this.parsePath();
			var params = null;
			t = this.token();
			if(t._hx_index == 3) {
				var op = t.s;
				if(op == "<") {
					params = [];
					_hx_loop1: while(true) {
						params.push(this.parseType());
						t = this.token();
						switch(t._hx_index) {
						case 3:
							var op = t.s;
							if(op == ">") {
								break _hx_loop1;
							}
							if(HxOverrides.cca(op,0) == 62) {
								this.tokens.add({ t : hscript_Token.TOp(HxOverrides.substr(op,1,null)), min : this.tokenMax - op.length - 1, max : this.tokenMax});
								break _hx_loop1;
							}
							break;
						case 9:
							continue;
						default:
						}
						this.unexpected(t);
						break;
					}
				} else {
					this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
			} else {
				this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			return this.parseTypeNext(hscript_CType.CTPath(path,params));
		case 4:
			var a = this.token();
			var b = this.token();
			this.tokens.push({ t : b, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			this.tokens.push({ t : a, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			var withReturn = function(args) {
				var _g = _gthis.token();
				if(_g._hx_index == 3) {
					if(_g.s != "->") {
						var t = _g;
						_gthis.unexpected(t);
					}
				} else {
					var t = _g;
					_gthis.unexpected(t);
				}
				return hscript_CType.CTFun(args,_gthis.parseType());
			};
			switch(a._hx_index) {
			case 2:
				var _g = a.s;
				if(b._hx_index == 14) {
					var _g = [];
					var _g1 = 0;
					var _g2 = this.parseFunctionArgs();
					while(_g1 < _g2.length) {
						var arg = _g2[_g1];
						++_g1;
						var _g3 = arg.value;
						if(_g3 != null) {
							var v = _g3;
							if(!this.resumeErrors) {
								throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.ECustom("Default values not allowed in function types"),v.pmin,v.pmax,this.origin,this.line));
							}
						}
						_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
					}
					var args = _g;
					return withReturn(args);
				} else {
					var t1 = this.parseType();
					var _g = this.token();
					switch(_g._hx_index) {
					case 5:
						return this.parseTypeNext(hscript_CType.CTParent(t1));
					case 9:
						var args = [t1];
						while(true) {
							args.push(this.parseType());
							if(!this.maybe(hscript_Token.TComma)) {
								break;
							}
						}
						var t1 = this.token();
						if(t1 != hscript_Token.TPClose) {
							this.unexpected(t1);
						}
						return withReturn(args);
					default:
						var t1 = _g;
						return this.unexpected(t1);
					}
				}
				break;
			case 5:
				var _g = [];
				var _g1 = 0;
				var _g2 = this.parseFunctionArgs();
				while(_g1 < _g2.length) {
					var arg = _g2[_g1];
					++_g1;
					var _g3 = arg.value;
					if(_g3 != null) {
						var v = _g3;
						if(!this.resumeErrors) {
							throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.ECustom("Default values not allowed in function types"),v.pmin,v.pmax,this.origin,this.line));
						}
					}
					_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
				}
				var args = _g;
				return withReturn(args);
			default:
				var t1 = this.parseType();
				var _g = this.token();
				switch(_g._hx_index) {
				case 5:
					return this.parseTypeNext(hscript_CType.CTParent(t1));
				case 9:
					var args = [t1];
					while(true) {
						args.push(this.parseType());
						if(!this.maybe(hscript_Token.TComma)) {
							break;
						}
					}
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
					return withReturn(args);
				default:
					var t1 = _g;
					return this.unexpected(t1);
				}
			}
			break;
		case 6:
			var fields = [];
			var meta = null;
			_hx_loop6: while(true) {
				t = this.token();
				switch(t._hx_index) {
				case 2:
					var _g = t.s;
					if(_g == "var") {
						var name = this.getIdent();
						var t1 = this.token();
						if(t1 != hscript_Token.TDoubleDot) {
							this.unexpected(t1);
						}
						fields.push({ name : name, t : this.parseType(), meta : meta});
						meta = null;
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					} else {
						var name1 = _g;
						var t3 = this.token();
						if(t3 != hscript_Token.TDoubleDot) {
							this.unexpected(t3);
						}
						fields.push({ name : name1, t : this.parseType(), meta : meta});
						t = this.token();
						switch(t._hx_index) {
						case 7:
							break _hx_loop6;
						case 9:
							break;
						default:
							this.unexpected(t);
						}
					}
					break;
				case 7:
					break _hx_loop6;
				case 15:
					var name2 = t.s;
					if(meta == null) {
						meta = [];
					}
					meta.push({ name : name2, params : this.parseMetaArgs()});
					break;
				default:
					this.unexpected(t);
					break _hx_loop6;
				}
			}
			return this.parseTypeNext(hscript_CType.CTAnon(fields));
		default:
			return this.unexpected(t);
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				return t;
			}
		} else {
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var _g = t2.ret;
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
		this.tokenMin = this.oldTokenMin;
		this.tokenMax = this.oldTokenMax;
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = content;
		this.readPos = 0;
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EInvalidOp("Unsupported class type parameters"),this.readPos,this.readPos,this.origin,this.line));
			}
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
						break _hx_loop2;
					}
				} else {
					this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
					break;
				}
			}
			var fields = [];
			var t = this.token();
			if(t != hscript_Token.TBrOpen) {
				this.unexpected(t);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t = this.token();
				if(t != hscript_Token.TDot) {
					this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
					break;
				}
				t = this.token();
				switch(t._hx_index) {
				case 2:
					var id = t.s;
					path.push(id);
					break;
				case 3:
					if(t.s == "*") {
						star = true;
					} else {
						this.unexpected(t);
					}
					break;
				default:
					this.unexpected(t);
				}
			}
			var t = this.token();
			if(t != hscript_Token.TSemicolon) {
				this.unexpected(t);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path = this.parsePath();
			var t = this.token();
			if(t != hscript_Token.TSemicolon) {
				this.unexpected(t);
			}
			return hscript_ModuleDecl.DPackage(path);
		case "typedef":
			var name = this.getIdent();
			var params = this.parseParams();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TOp("="))) {
				this.unexpected(t);
			}
			var t = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name, meta : meta, params : params, isPrivate : isPrivate, t : t});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		_hx_loop1: while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else {
					var tmp;
					if(type != null) {
						if(type == null) {
							tmp = false;
						} else if(type._hx_index == 2) {
							var _g = type.fields;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t3 = this.token();
						if(t3 != hscript_Token.TSemicolon) {
							this.unexpected(t3);
						}
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
				break _hx_loop1;
			}
		}
		return null;
	}
	,readChar: function() {
		return this.input.charCodeAt(this.readPos++);
	}
	,readString: function(until) {
		var c = 0;
		var b_b = "";
		var esc = false;
		var old = this.line;
		var s = this.input;
		var p1 = this.readPos - 1;
		while(true) {
			var c = this.input.charCodeAt(this.readPos++);
			if(c != c) {
				this.line = old;
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EUnterminatedString,p1,p1,this.origin,this.line));
				}
				break;
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b_b += String.fromCodePoint(c);
					break;
				case 47:
					if(this.allowJSON) {
						b_b += String.fromCodePoint(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b_b += String.fromCodePoint(10);
					break;
				case 114:
					b_b += String.fromCodePoint(13);
					break;
				case 116:
					b_b += String.fromCodePoint(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var char = this.input.charCodeAt(this.readPos++);
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							if(char != char) {
								this.line = old;
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EUnterminatedString,p1,p1,this.origin,this.line));
								}
							}
							this.invalidChar(char);
						}
					}
					b_b += String.fromCodePoint(k);
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b_b += String.fromCodePoint(c);
			}
		}
		return b_b;
	}
	,token: function() {
		var t = this.tokens.pop();
		if(t != null) {
			this.tokenMin = t.min;
			this.tokenMax = t.max;
			return t.t;
		}
		this.oldTokenMin = this.tokenMin;
		this.oldTokenMax = this.tokenMax;
		this.tokenMin = this.char < 0 ? this.readPos : this.readPos - 1;
		var t = this._token();
		this.tokenMax = this.char < 0 ? this.readPos - 1 : this.readPos - 2;
		return t;
	}
	,_token: function() {
		var char;
		if(this.char < 0) {
			char = this.input.charCodeAt(this.readPos++);
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			if(char != char) {
				this.char = char;
				return hscript_Token.TEof;
			}
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				this.tokenMin++;
				break;
			case 9:case 13:case 32:
				this.tokenMin++;
				break;
			case 35:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.input.charCodeAt(this.readPos++);
				switch(char) {
				case 46:
					char = this.input.charCodeAt(this.readPos++);
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.input.charCodeAt(this.readPos++);
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.input.charCodeAt(this.readPos++) == 46) {
								this.tokens.push({ t : hscript_Token.TOp("..."), min : this.tokenMin, max : this.tokenMax});
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						switch(tk._hx_index) {
						case 1:
							var _g = tk.c;
							if(_g._hx_index == 0) {
								var e = _g.v;
								pow = e;
							} else {
								this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							break;
						case 3:
							if(tk.s == "-") {
								tk = this.token();
								if(tk._hx_index == 1) {
									var _g1 = tk.c;
									if(_g1._hx_index == 0) {
										var e1 = _g1.v;
										pow = -e1;
									} else {
										this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
										this.tokenMin = this.oldTokenMin;
										this.tokenMax = this.oldTokenMax;
									}
								} else {
									this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
								}
							} else {
								this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							break;
						default:
							this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.input.charCodeAt(this.readPos++);
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.input.charCodeAt(this.readPos++);
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					var prev = -1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.input.charCodeAt(this.readPos++);
		}
	}
	,preprocValue: function(id) {
		return this.preprocesorValues.h[id];
	}
	,parsePreproCond: function() {
		var tk = this.token();
		switch(tk._hx_index) {
		case 2:
			var id = tk.s;
			var e = hscript_ExprDef.EIdent(id);
			var pmin = this.tokenMin;
			var pmax = this.tokenMax;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case 3:
			if(tk.s == "!") {
				var e = hscript_ExprDef.EUnop("!",true,this.parsePreproCond());
				var pmin = this.tokenMin;
				var pmax = this.tokenMax;
				if(e == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			} else {
				return this.unexpected(tk);
			}
			break;
		case 4:
			this.tokens.push({ t : hscript_Token.TPOpen, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return this.parseExpr();
		default:
			return this.unexpected(tk);
		}
	}
	,evalPreproCond: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var id = _g.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = _g.e;
			return this.evalPreproCond(e1);
		case 6:
			var _g1 = _g.e2;
			var _g2 = _g.e1;
			switch(_g.op) {
			case "&&":
				var e2 = _g1;
				var e1 = _g2;
				if(this.evalPreproCond(e1)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e2 = _g1;
				var e1 = _g2;
				if(!this.evalPreproCond(e1)) {
					return this.evalPreproCond(e2);
				} else {
					return true;
				}
				break;
			default:
				var e1 = e.e;
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Can't eval " + $hxEnums[e1.__enum__].__constructs__[e1._hx_index]),this.readPos,this.readPos,this.origin,this.line));
				}
				return false;
			}
			break;
		case 7:
			var _g1 = _g.prefix;
			if(_g.op == "!") {
				var e1 = _g.e;
				return !this.evalPreproCond(e1);
			} else {
				var e1 = e.e;
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Can't eval " + $hxEnums[e1.__enum__].__constructs__[e1._hx_index]),this.readPos,this.readPos,this.origin,this.line));
				}
				return false;
			}
			break;
		default:
			var e1 = e.e;
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Can't eval " + $hxEnums[e1.__enum__].__constructs__[e1._hx_index]),this.readPos,this.readPos,this.origin,this.line));
			}
			return false;
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = this.readPos;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Unclosed"),pos,pos,this.origin,this.line));
				}
			}
			if(this.preprocStack[spos] != obj) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			while(char != 13 && char != 10) {
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					break;
				}
			}
			this.char = char;
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			while(true) {
				while(char != 42) {
					if(char == 10) {
						this.line++;
					}
					char = this.input.charCodeAt(this.readPos++);
					if(char != char) {
						this.line = old;
						if(!this.resumeErrors) {
							throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EUnterminatedComment,this.tokenMin,this.tokenMin,this.origin,this.line));
						}
						break;
					}
				}
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					this.line = old;
					if(!this.resumeErrors) {
						throw haxe_Exception.thrown(new hscript_Error(hscript_ErrorDef.EUnterminatedComment,this.tokenMin,this.tokenMin,this.origin,this.line));
					}
					break;
				}
				if(char == 47) {
					break;
				}
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s = t.s;
			return s;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id = t.s;
			return "#" + id;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Printer = function() {
};
$hxClasses["hscript.Printer"] = hscript_Printer;
hscript_Printer.__name__ = true;
hscript_Printer.toString = function(e) {
	return new hscript_Printer().exprToString(e);
};
hscript_Printer.errorToString = function(e) {
	var message;
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var c = _g.c;
		message = "Invalid character: '" + (c != c ? "EOF" : String.fromCodePoint(c)) + "' (" + c + ")";
		break;
	case 1:
		var s = _g.s;
		message = "Unexpected token: \"" + s + "\"";
		break;
	case 2:
		message = "Unterminated string";
		break;
	case 3:
		message = "Unterminated comment";
		break;
	case 4:
		var str = _g.msg;
		message = "Invalid preprocessor (" + str + ")";
		break;
	case 5:
		var v = _g.v;
		message = "Unknown variable: " + v;
		break;
	case 6:
		var v = _g.v;
		message = "Invalid iterator: " + v;
		break;
	case 7:
		var op = _g.op;
		message = "Invalid operator: " + op;
		break;
	case 8:
		var f = _g.f;
		message = "Invalid access to field " + f;
		break;
	case 9:
		var msg = _g.msg;
		message = msg;
		break;
	}
	return e.origin + ":" + e.line + ": " + message;
};
hscript_Printer.prototype = {
	exprToString: function(e) {
		this.buf = new StringBuf();
		this.tabs = "";
		this.expr(e);
		return this.buf.b;
	}
	,typeToString: function(t) {
		this.buf = new StringBuf();
		this.tabs = "";
		this.type(t);
		return this.buf.b;
	}
	,add: function(s) {
		this.buf.b += Std.string(s);
	}
	,type: function(t) {
		switch(t._hx_index) {
		case 0:
			var params = t.params;
			var path = t.path;
			var s = path.join(".");
			this.buf.b += Std.string(s);
			if(params != null) {
				this.buf.b += "<";
				var first = true;
				var _g = 0;
				while(_g < params.length) {
					var p = params[_g];
					++_g;
					if(first) {
						first = false;
					} else {
						this.buf.b += ", ";
					}
					this.type(p);
				}
				this.buf.b += ">";
			}
			break;
		case 1:
			var _g = t.ret;
			var _g1 = t.args;
			var ret = _g;
			var args = _g1;
			if(Lambda.exists(args,function(a) {
				if(a._hx_index == 5) {
					var _g = a.t;
					var _g = a.n;
					return true;
				} else {
					return false;
				}
			})) {
				this.buf.b += "(";
				var _g2 = 0;
				while(_g2 < args.length) {
					var a = args[_g2];
					++_g2;
					if(a._hx_index == 5) {
						var _g3 = a.t;
						var _g4 = a.n;
						this.type(a);
					} else {
						this.type(hscript_CType.CTNamed("_",a));
					}
				}
				this.buf.b += ")->";
				this.type(ret);
			} else {
				var ret = _g;
				var args = _g1;
				if(args.length == 0) {
					this.buf.b += "Void -> ";
				} else {
					var _g = 0;
					while(_g < args.length) {
						var a = args[_g];
						++_g;
						this.type(a);
						this.buf.b += " -> ";
					}
				}
				this.type(ret);
			}
			break;
		case 2:
			var fields = t.fields;
			this.buf.b += "{";
			var first = true;
			var _g = 0;
			while(_g < fields.length) {
				var f = fields[_g];
				++_g;
				if(first) {
					first = false;
					this.buf.b += " ";
				} else {
					this.buf.b += ", ";
				}
				this.buf.b += Std.string(f.name + " : ");
				this.type(f.t);
			}
			this.buf.b += first ? "}" : " }";
			break;
		case 3:
			var t1 = t.t;
			this.buf.b += "(";
			this.type(t1);
			this.buf.b += ")";
			break;
		case 4:
			var t1 = t.t;
			this.buf.b += "?";
			this.type(t1);
			break;
		case 5:
			var t1 = t.t;
			var name = t.n;
			this.buf.b += name == null ? "null" : "" + name;
			this.buf.b += ":";
			this.type(t1);
			break;
		}
	}
	,addType: function(t) {
		if(t != null) {
			this.buf.b += " : ";
			this.type(t);
		}
	}
	,expr: function(e) {
		if(e == null) {
			this.buf.b += "??NULL??";
			return;
		}
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			switch(c._hx_index) {
			case 0:
				var i = c.v;
				this.buf.b += i == null ? "null" : "" + i;
				break;
			case 1:
				var f = c.f;
				this.buf.b += f == null ? "null" : "" + f;
				break;
			case 2:
				var s = c.s;
				this.buf.b += "\"";
				var s1 = s.split("\"").join("\\\"").split("\n").join("\\n").split("\r").join("\\r").split("\t").join("\\t");
				this.buf.b += Std.string(s1);
				this.buf.b += "\"";
				break;
			}
			break;
		case 1:
			var v = _g.v;
			this.buf.b += v == null ? "null" : "" + v;
			break;
		case 2:
			var e = _g.e;
			var t = _g.t;
			var n = _g.n;
			this.buf.b += Std.string("var " + n);
			this.addType(t);
			if(e != null) {
				this.buf.b += " = ";
				this.expr(e);
			}
			break;
		case 3:
			var e = _g.e;
			this.buf.b += "(";
			this.expr(e);
			this.buf.b += ")";
			break;
		case 4:
			var el = _g.e;
			if(el.length == 0) {
				this.buf.b += "{}";
			} else {
				this.tabs += "\t";
				this.buf.b += "{\n";
				var _g1 = 0;
				while(_g1 < el.length) {
					var e = el[_g1];
					++_g1;
					this.buf.b += Std.string(this.tabs);
					this.expr(e);
					this.buf.b += ";\n";
				}
				this.tabs = HxOverrides.substr(this.tabs,1,null);
				this.buf.b += "}";
			}
			break;
		case 5:
			var f = _g.f;
			var e = _g.e;
			this.expr(e);
			this.buf.b += Std.string("." + f);
			break;
		case 6:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var op = _g.op;
			this.expr(e1);
			this.buf.b += Std.string(" " + op + " ");
			this.expr(e2);
			break;
		case 7:
			var e = _g.e;
			var pre = _g.prefix;
			var op = _g.op;
			if(pre) {
				this.buf.b += op == null ? "null" : "" + op;
				this.expr(e);
			} else {
				this.expr(e);
				this.buf.b += op == null ? "null" : "" + op;
			}
			break;
		case 8:
			var args = _g.params;
			var e = _g.e;
			if(e == null) {
				this.expr(e);
			} else {
				var _g1 = e.e;
				switch(_g1._hx_index) {
				case 0:
					var _g2 = _g1.c;
					this.expr(e);
					break;
				case 1:
					var _g2 = _g1.v;
					this.expr(e);
					break;
				case 5:
					var _g2 = _g1.f;
					var _g2 = _g1.e;
					this.expr(e);
					break;
				default:
					this.buf.b += "(";
					this.expr(e);
					this.buf.b += ")";
				}
			}
			this.buf.b += "(";
			var first = true;
			var _g1 = 0;
			while(_g1 < args.length) {
				var a = args[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(a);
			}
			this.buf.b += ")";
			break;
		case 9:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var cond = _g.cond;
			this.buf.b += "if( ";
			this.expr(cond);
			this.buf.b += " ) ";
			this.expr(e1);
			if(e2 != null) {
				this.buf.b += " else ";
				this.expr(e2);
			}
			break;
		case 10:
			var e = _g.e;
			var cond = _g.cond;
			this.buf.b += "while( ";
			this.expr(cond);
			this.buf.b += " ) ";
			this.expr(e);
			break;
		case 11:
			var e = _g.e;
			var it = _g.it;
			var v = _g.v;
			this.buf.b += Std.string("for( " + v + " in ");
			this.expr(it);
			this.buf.b += " ) ";
			this.expr(e);
			break;
		case 12:
			this.buf.b += "break";
			break;
		case 13:
			this.buf.b += "continue";
			break;
		case 14:
			var ret = _g.ret;
			var name = _g.name;
			var e = _g.e;
			var params = _g.args;
			this.buf.b += "function";
			if(name != null) {
				this.buf.b += Std.string(" " + name);
			}
			this.buf.b += "(";
			var first = true;
			var _g1 = 0;
			while(_g1 < params.length) {
				var a = params[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += ", ";
				}
				if(a.opt) {
					this.buf.b += "?";
				}
				this.buf.b += Std.string(a.name);
				this.addType(a.t);
			}
			this.buf.b += ")";
			this.addType(ret);
			this.buf.b += " ";
			this.expr(e);
			break;
		case 15:
			var e = _g.e;
			this.buf.b += "return";
			if(e != null) {
				this.buf.b += " ";
				this.expr(e);
			}
			break;
		case 16:
			var index = _g.index;
			var e = _g.e;
			this.expr(e);
			this.buf.b += "[";
			this.expr(index);
			this.buf.b += "]";
			break;
		case 17:
			var el = _g.e;
			this.buf.b += "[";
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(e);
			}
			this.buf.b += "]";
			break;
		case 18:
			var args = _g.params;
			var cl = _g.cl;
			this.buf.b += Std.string("new " + cl + "(");
			var first = true;
			var _g1 = 0;
			while(_g1 < args.length) {
				var e = args[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(e);
			}
			this.buf.b += ")";
			break;
		case 19:
			var e = _g.e;
			this.buf.b += "throw ";
			this.expr(e);
			break;
		case 20:
			var ecatch = _g.ecatch;
			var t = _g.t;
			var v = _g.v;
			var e = _g.e;
			this.buf.b += "try ";
			this.expr(e);
			this.buf.b += Std.string(" catch( " + v);
			this.addType(t);
			this.buf.b += ") ";
			this.expr(ecatch);
			break;
		case 21:
			var fl = _g.fl;
			if(fl.length == 0) {
				this.buf.b += "{}";
			} else {
				this.tabs += "\t";
				this.buf.b += "{\n";
				var _g1 = 0;
				while(_g1 < fl.length) {
					var f = fl[_g1];
					++_g1;
					this.buf.b += Std.string(this.tabs);
					this.buf.b += Std.string(f.name + " : ");
					this.expr(f.e);
					this.buf.b += ",\n";
				}
				this.tabs = HxOverrides.substr(this.tabs,1,null);
				this.buf.b += "}";
			}
			break;
		case 22:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var c = _g.cond;
			this.expr(c);
			this.buf.b += " ? ";
			this.expr(e1);
			this.buf.b += " : ";
			this.expr(e2);
			break;
		case 23:
			var def = _g.defaultExpr;
			var cases = _g.cases;
			var e = _g.e;
			this.buf.b += "switch( ";
			this.expr(e);
			this.buf.b += ") {";
			var _g1 = 0;
			while(_g1 < cases.length) {
				var c = cases[_g1];
				++_g1;
				this.buf.b += "case ";
				var first = true;
				var _g2 = 0;
				var _g3 = c.values;
				while(_g2 < _g3.length) {
					var v = _g3[_g2];
					++_g2;
					if(first) {
						first = false;
					} else {
						this.buf.b += ", ";
					}
					this.expr(v);
				}
				this.buf.b += ": ";
				this.expr(c.expr);
				this.buf.b += ";\n";
			}
			if(def != null) {
				this.buf.b += "default: ";
				this.expr(def);
				this.buf.b += ";\n";
			}
			this.buf.b += "}";
			break;
		case 24:
			var e = _g.e;
			var cond = _g.cond;
			this.buf.b += "do ";
			this.expr(e);
			this.buf.b += " while ( ";
			this.expr(cond);
			this.buf.b += " )";
			break;
		case 25:
			var e = _g.e;
			var args = _g.args;
			var name = _g.name;
			this.buf.b += "@";
			this.buf.b += name == null ? "null" : "" + name;
			if(args != null && args.length > 0) {
				this.buf.b += "(";
				var first = true;
				var _g1 = 0;
				while(_g1 < args.length) {
					var a = args[_g1];
					++_g1;
					if(first) {
						first = false;
					} else {
						this.buf.b += ", ";
					}
					this.expr(e);
				}
				this.buf.b += ")";
			}
			this.buf.b += " ";
			this.expr(e);
			break;
		case 26:
			var t = _g.t;
			var e = _g.e;
			this.buf.b += "(";
			this.expr(e);
			this.buf.b += " : ";
			this.addType(t);
			this.buf.b += ")";
			break;
		}
	}
	,__class__: hscript_Printer
};
var hscript_Tools = function() { };
$hxClasses["hscript.Tools"] = hscript_Tools;
hscript_Tools.__name__ = true;
hscript_Tools.iter = function(e,f) {
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		break;
	case 1:
		var _g1 = _g.v;
		break;
	case 2:
		var _g1 = _g.t;
		var _g1 = _g.n;
		var e = _g.e;
		if(e != null) {
			f(e);
		}
		break;
	case 3:
		var e = _g.e;
		f(e);
		break;
	case 4:
		var el = _g.e;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 5:
		var _g1 = _g.f;
		var e = _g.e;
		f(e);
		break;
	case 6:
		var _g1 = _g.op;
		var e2 = _g.e2;
		var e1 = _g.e1;
		f(e1);
		f(e2);
		break;
	case 7:
		var _g1 = _g.prefix;
		var _g1 = _g.op;
		var e = _g.e;
		f(e);
		break;
	case 8:
		var args = _g.params;
		var e = _g.e;
		f(e);
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			f(a);
		}
		break;
	case 9:
		var e2 = _g.e2;
		var e1 = _g.e1;
		var c = _g.cond;
		f(c);
		f(e1);
		if(e2 != null) {
			f(e2);
		}
		break;
	case 10:
		var e = _g.e;
		var c = _g.cond;
		f(c);
		f(e);
		break;
	case 11:
		var _g1 = _g.v;
		var e = _g.e;
		var it = _g.it;
		f(it);
		f(e);
		break;
	case 12:case 13:
		break;
	case 14:
		var _g1 = _g.ret;
		var _g1 = _g.name;
		var _g1 = _g.args;
		var e = _g.e;
		f(e);
		break;
	case 15:
		var e = _g.e;
		if(e != null) {
			f(e);
		}
		break;
	case 16:
		var i = _g.index;
		var e = _g.e;
		f(e);
		f(i);
		break;
	case 17:
		var el = _g.e;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 18:
		var _g1 = _g.cl;
		var el = _g.params;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 19:
		var e = _g.e;
		f(e);
		break;
	case 20:
		var _g1 = _g.t;
		var _g1 = _g.v;
		var c = _g.ecatch;
		var e = _g.e;
		f(e);
		f(c);
		break;
	case 21:
		var fl = _g.fl;
		var _g1 = 0;
		while(_g1 < fl.length) {
			var fi = fl[_g1];
			++_g1;
			f(fi.e);
		}
		break;
	case 22:
		var e2 = _g.e2;
		var e1 = _g.e1;
		var c = _g.cond;
		f(c);
		f(e1);
		f(e2);
		break;
	case 23:
		var def = _g.defaultExpr;
		var cases = _g.cases;
		var e = _g.e;
		f(e);
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = c.values;
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				f(v);
			}
			f(c.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 24:
		var e = _g.e;
		var c = _g.cond;
		f(c);
		f(e);
		break;
	case 25:
		var e = _g.e;
		var args = _g.args;
		var name = _g.name;
		if(args != null) {
			var _g1 = 0;
			while(_g1 < args.length) {
				var a = args[_g1];
				++_g1;
				f(a);
			}
		}
		f(e);
		break;
	case 26:
		var _g1 = _g.t;
		var e = _g.e;
		f(e);
		break;
	}
};
hscript_Tools.map = function(e,f) {
	var edef;
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		edef = e.e;
		break;
	case 1:
		var _g1 = _g.v;
		edef = e.e;
		break;
	case 2:
		var e1 = _g.e;
		var t = _g.t;
		var n = _g.n;
		edef = hscript_ExprDef.EVar(n,t,e1 != null ? f(e1) : null);
		break;
	case 3:
		var e1 = _g.e;
		edef = hscript_ExprDef.EParent(f(e1));
		break;
	case 4:
		var el = _g.e;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		edef = hscript_ExprDef.EBlock(_g1);
		break;
	case 5:
		var fi = _g.f;
		var e1 = _g.e;
		edef = hscript_ExprDef.EField(f(e1),fi);
		break;
	case 6:
		var e2 = _g.e2;
		var e1 = _g.e1;
		var op = _g.op;
		edef = hscript_ExprDef.EBinop(op,f(e1),f(e2));
		break;
	case 7:
		var e1 = _g.e;
		var pre = _g.prefix;
		var op = _g.op;
		edef = hscript_ExprDef.EUnop(op,pre,f(e1));
		break;
	case 8:
		var args = _g.params;
		var e1 = _g.e;
		var edef1 = f(e1);
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < args.length) {
			var a = args[_g2];
			++_g2;
			_g1.push(f(a));
		}
		edef = hscript_ExprDef.ECall(edef1,_g1);
		break;
	case 9:
		var e2 = _g.e2;
		var e1 = _g.e1;
		var c = _g.cond;
		edef = hscript_ExprDef.EIf(f(c),f(e1),e2 != null ? f(e2) : null);
		break;
	case 10:
		var e1 = _g.e;
		var c = _g.cond;
		edef = hscript_ExprDef.EWhile(f(c),f(e1));
		break;
	case 11:
		var e1 = _g.e;
		var it = _g.it;
		var v = _g.v;
		edef = hscript_ExprDef.EFor(v,f(it),f(e1));
		break;
	case 12:case 13:
		edef = e.e;
		break;
	case 14:
		var t = _g.ret;
		var name = _g.name;
		var e1 = _g.e;
		var args = _g.args;
		edef = hscript_ExprDef.EFunction(args,f(e1),name,t);
		break;
	case 15:
		var e1 = _g.e;
		edef = hscript_ExprDef.EReturn(e1 != null ? f(e1) : null);
		break;
	case 16:
		var i = _g.index;
		var e1 = _g.e;
		edef = hscript_ExprDef.EArray(f(e1),f(i));
		break;
	case 17:
		var el = _g.e;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		edef = hscript_ExprDef.EArrayDecl(_g1);
		break;
	case 18:
		var el = _g.params;
		var cl = _g.cl;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		edef = hscript_ExprDef.ENew(cl,_g1);
		break;
	case 19:
		var e1 = _g.e;
		edef = hscript_ExprDef.EThrow(f(e1));
		break;
	case 20:
		var c = _g.ecatch;
		var t = _g.t;
		var v = _g.v;
		var e1 = _g.e;
		edef = hscript_ExprDef.ETry(f(e1),v,t,f(c));
		break;
	case 21:
		var fl = _g.fl;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < fl.length) {
			var fi = fl[_g2];
			++_g2;
			_g1.push({ name : fi.name, e : f(fi.e)});
		}
		edef = hscript_ExprDef.EObject(_g1);
		break;
	case 22:
		var e2 = _g.e2;
		var e1 = _g.e1;
		var c = _g.cond;
		edef = hscript_ExprDef.ETernary(f(c),f(e1),f(e2));
		break;
	case 23:
		var def = _g.defaultExpr;
		var cases = _g.cases;
		var e1 = _g.e;
		var edef1 = f(e1);
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < cases.length) {
			var c = cases[_g2];
			++_g2;
			var _g3 = [];
			var _g4 = 0;
			var _g5 = c.values;
			while(_g4 < _g5.length) {
				var v = _g5[_g4];
				++_g4;
				_g3.push(f(v));
			}
			_g1.push({ values : _g3, expr : f(c.expr)});
		}
		edef = hscript_ExprDef.ESwitch(edef1,_g1,def == null ? null : f(def));
		break;
	case 24:
		var e1 = _g.e;
		var c = _g.cond;
		edef = hscript_ExprDef.EDoWhile(f(c),f(e1));
		break;
	case 25:
		var e1 = _g.e;
		var args = _g.args;
		var name = _g.name;
		var edef1;
		if(args == null) {
			edef1 = null;
		} else {
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < args.length) {
				var a = args[_g2];
				++_g2;
				_g1.push(f(a));
			}
			edef1 = _g1;
		}
		edef = hscript_ExprDef.EMeta(name,edef1,f(e1));
		break;
	case 26:
		var t = _g.t;
		var e1 = _g.e;
		edef = hscript_ExprDef.ECheckType(f(e1),t);
		break;
	}
	return { e : edef, pmin : e.pmin, pmax : e.pmax, origin : e.origin, line : e.line};
};
hscript_Tools.expr = function(e) {
	return e.e;
};
hscript_Tools.mk = function(e,p) {
	return { e : e, pmin : p.pmin, pmax : p.pmax, origin : p.origin, line : p.line};
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var ub1_JavaClient = function() { };
$hxClasses["ub1.JavaClient"] = ub1_JavaClient;
ub1_JavaClient.__name__ = true;
ub1_JavaClient.main = function() {
	var doc = window.document;
	var pageProps = window.ub1Props;
	ub1_Ub1Client.load(doc,pageProps);
};
var ub1_Ub1Client = function() { };
$hxClasses["ub1.Ub1Client"] = ub1_Ub1Client;
ub1_Ub1Client.__name__ = true;
ub1_Ub1Client.load = function(doc,pageProps) {
	var _g = 0;
	var _g1 = pageProps.length;
	while(_g < _g1) {
		var i = _g++;
		pageProps[i].id = i;
	}
	pageProps[0].id = 0;
	pageProps[0].dom = doc.documentElement;
	var ret = new ub1_core_Page(doc,pageProps[0],pageProps);
	ub1_Ub1Client.loadChildren(pageProps,ret,ret.dom);
	ret.context.refresh();
	return ret;
};
ub1_Ub1Client.loadChildren = function(pageProps,p,dom) {
	var child = dom.firstElementChild;
	while(child != null) {
		var s = child.getAttribute("data-id");
		if(s != null) {
			var id = Std.parseInt(s);
			var props = pageProps[id];
			props.id = id;
			props.dom = child;
			var e;
			switch(child.tagName) {
			case "BODY":
				e = new ub1_core_Body(p,props);
				break;
			case "HEAD":
				e = new ub1_core_Head(p,props);
				break;
			default:
				e = new ub1_core_Element(p,props);
			}
			ub1_Ub1Client.loadChildren(pageProps,e,child);
		} else {
			ub1_Ub1Client.loadChildren(pageProps,p,child);
		}
		child = child.nextElementSibling;
	}
};
var ub1_lib_BaseNode = function(parent,plug,index,cb) {
	this.baseRoot = (this.baseParent = parent) != null ? parent.baseRoot : this;
	this.init();
	if(parent != null) {
		parent.addChild(this,plug,index);
	}
	if(cb != null) {
		cb(this);
	}
};
$hxClasses["ub1.lib.BaseNode"] = ub1_lib_BaseNode;
ub1_lib_BaseNode.__name__ = true;
ub1_lib_BaseNode.prototype = {
	get_baseChildren: function() {
		if(this._cdn != null) {
			return this._cdn;
		} else {
			return ub1_lib_BaseNode.NOCHILDREN;
		}
	}
	,getSlot: function(name,cb) {
		var ret = null;
		if(name == "self" || this.slots == null) {
			ret = this;
		} else {
			if(name == null) {
				name = "default";
			}
			ret = this.slots.h[name];
			if(ret == null) {
				ret = this.slots.h["catchall"];
			}
		}
		if(ret == null) {
			ret = this;
		}
		if(cb != null) {
			cb(ret);
		}
		return ret;
	}
	,addChild: function(child,plug,before) {
		var p = this.getSlot(plug);
		if(p != null) {
			if(p._cdn == null) {
				p._cdn = [];
			}
			var i;
			var pos = before != null ? before : p._cdn.length;
			if(this.before != null) {
				i = this.before.getIndex();
				if(i >= 0) {
					if(i < pos) {
						pos = i;
					}
				}
			}
			p._cdn.splice(pos,0,child);
			if(pos >= 0) {
				++pos;
			}
			child.logicalParent = this;
			child.baseParent = p;
			child.wasAdded(this,p,pos);
		}
		return this;
	}
	,remove: function() {
		if(this.baseParent != null) {
			this.baseParent.removeChild(this);
		}
	}
	,removeChild: function(child) {
		if(this._cdn != null && HxOverrides.remove(this._cdn,child)) {
			var logicalParent = child.logicalParent;
			child.logicalParent = null;
			child.baseParent = null;
			child.wasRemoved(logicalParent,this);
		}
		return child;
	}
	,removeChildren: function() {
		while(this._cdn != null && this._cdn.length > 0) this.removeChild(this._cdn[this._cdn.length - 1]);
		return this;
	}
	,hasChildren: function() {
		if(this._cdn != null) {
			return this._cdn.length > 0;
		} else {
			return false;
		}
	}
	,getPrevSibling: function() {
		var ret = null;
		if(this.baseParent != null) {
			var i = this.baseParent.get_baseChildren().indexOf(this);
			if(i > 0) {
				ret = this.baseParent.get_baseChildren()[i - 1];
			}
		}
		return ret;
	}
	,getNextSibling: function() {
		var ret = null;
		if(this.baseParent != null) {
			var len = this.baseParent.get_baseChildren().length;
			var i = this.baseParent.get_baseChildren().indexOf(this);
			if(i >= 0 && i < len - 1) {
				ret = this.baseParent.get_baseChildren()[i + 1];
			}
		}
		return ret;
	}
	,getIndex: function() {
		var ret = this.baseParent != null ? this.baseParent.get_baseChildren().indexOf(this) : -1;
		return ret;
	}
	,init: function() {
	}
	,wasAdded: function(logicalParent,parent,before) {
	}
	,wasRemoved: function(logicalParent,parent) {
	}
	,__class__: ub1_lib_BaseNode
	,__properties__: {get_baseChildren:"get_baseChildren"}
};
var ub1_reactivity_ReScope = function(parent,name,plug,index,cb) {
	this.animations = new haxe_ds_StringMap();
	this.autoId = 0;
	var _gthis = this;
	this.clonedScope = false;
	this.name = name;
	if(parent != null) {
		new ub1_reactivity_ReConst(this,"parent",parent);
		if(name != null) {
			new ub1_reactivity_ReConst(parent,name,this);
		}
		this.context = parent.context;
		new ub1_reactivity_ReConst(this,"animate",$bind(this,this.animate));
	} else {
		new ub1_reactivity_ReConst(this,"root",this);
		if(name != null) {
			new ub1_reactivity_ReConst(this,name,this);
		}
		this.context = new ub1_reactivity_ReContext(this);
		new ub1_reactivity_ReConst(this,"null",null);
		new ub1_reactivity_ReConst(this,"true",true);
		new ub1_reactivity_ReConst(this,"false",false);
		new ub1_reactivity_ReConst(this,"trace",Reflect.makeVarArgs(function(el) {
			var inf = _gthis.context.interp.posInfos();
			var v = el.shift();
			if(el.length > 0) {
				inf.customParams = el;
			}
			haxe_Log.trace(Std.string(v),inf);
		}));
		new ub1_reactivity_ReConst(this,"log",function(s) {
			console.log(s);
		});
		new ub1_reactivity_ReConst(this,"__nn__",ub1_lib_Util.orEmpty);
		new ub1_reactivity_ReConst(this,"int",function(v) {
			return Std.parseInt(v + "");
		});
	}
	new ub1_reactivity_ReConst(this,"this",this);
	ub1_lib_BaseNode.call(this,parent,plug,index,cb);
	if(parent == null) {
		this.context.refresh();
	}
};
$hxClasses["ub1.reactivity.ReScope"] = ub1_reactivity_ReScope;
ub1_reactivity_ReScope.__name__ = true;
ub1_reactivity_ReScope.startAnimation = function(a) {
	var ret = parseFloat(Std.string(a.scope.get(a.key,false)));
	var v1 = ret != NaN ? ret : 0;
	var ret = parseFloat(Std.string(a.val));
	var v2 = ret != NaN ? ret : 0;
	var suffix = ub1_reactivity_ReScope.suffixRE.match(a.val + "") ? ub1_reactivity_ReScope.suffixRE.matched(1) : null;
	var t = new feffects_Tween(v1,v2,a.secs * 1000 | 0,a.easing);
	if(suffix != null) {
		t.onUpdate(function(e) {
			a.scope.set(a.key,Math.round(e * 100) / 100 + suffix);
		});
	} else {
		t.onUpdate(function(e) {
			a.scope.set(a.key,Math.round(e * 100) / 100);
		});
	}
	t.onFinish(function() {
		a.scope.set(a.key,a.val);
		var key = a.key;
		var _this = a.scope.animations;
		if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
			delete(_this.h[key]);
		}
		if(a.cb != null) {
			a.cb();
		}
	});
	t.start();
	a.delay = null;
	a.tween = t;
};
ub1_reactivity_ReScope.toFloat = function(s,defval) {
	if(defval == null) {
		defval = 0;
	}
	var ret = parseFloat(Std.string(s));
	if(ret != NaN) {
		return ret;
	} else {
		return defval;
	}
};
ub1_reactivity_ReScope.toInt = function(s,defval) {
	if(defval == null) {
		defval = 0;
	}
	var ret = Std.parseInt(Std.string(s));
	if(ret != null) {
		return ret;
	} else {
		return defval;
	}
};
ub1_reactivity_ReScope.__super__ = ub1_lib_BaseNode;
ub1_reactivity_ReScope.prototype = $extend(ub1_lib_BaseNode.prototype,{
	get_rootScope: function() {
		return this.baseRoot;
	}
	,get_parentScope: function() {
		return this.baseParent;
	}
	,get_childScopes: function() {
		return this.get_baseChildren();
	}
	,removeChild: function(child) {
		var childName = (js_Boot.__cast(child , ub1_reactivity_ReScope)).name;
		if(childName != null) {
			var v = this.values.h[childName];
			if(v != null && v.v == child) {
				var _this = this.values;
				if(Object.prototype.hasOwnProperty.call(_this.h,childName)) {
					delete(_this.h[childName]);
				}
			}
		}
		return ub1_lib_BaseNode.prototype.removeChild.call(this,child);
	}
	,get: function(n,pull) {
		if(pull == null) {
			pull = true;
		}
		var ret = this.values != null ? this.values.h[n] : null;
		var value;
		if(ret == null) {
			if(this.baseParent != null) {
				var _this = this.baseParent;
				var ret1 = _this.values != null ? _this.values.h[n] : null;
				value = ret1 == null ? _this.baseParent != null ? _this.baseParent.resolve(n) : null : ret1;
			} else {
				value = null;
			}
		} else {
			value = ret;
		}
		if(value != null) {
			return value.get(pull);
		} else {
			return null;
		}
	}
	,getLocal: function(n,pull) {
		if(pull == null) {
			pull = true;
		}
		var value = this.values.h[n];
		if(value != null) {
			return value.get(pull);
		} else {
			return null;
		}
	}
	,getLocalBool: function(key,defval,pull) {
		if(pull == null) {
			pull = true;
		}
		var ret = this.getLocal(key,pull);
		if(ret != null) {
			if(ret != "true") {
				return ret == true;
			} else {
				return true;
			}
		} else {
			return defval;
		}
	}
	,getLocalInt: function(key,defval,pull) {
		if(pull == null) {
			pull = true;
		}
		var ret = Std.parseInt(this.getLocal(key,pull));
		if(ret != null) {
			return ret;
		} else {
			return defval;
		}
	}
	,getLocalFloat: function(key,defv,pull) {
		if(pull == null) {
			pull = true;
		}
		var ret = parseFloat(this.getLocal(key,pull));
		if(ret != NaN) {
			return ret;
		} else {
			return defv;
		}
	}
	,getLocalString: function(key,defv,pull) {
		if(pull == null) {
			pull = true;
		}
		var ret = this.getLocal(key,pull);
		if(ret != null) {
			return Std.string(ret);
		} else {
			return defv;
		}
	}
	,set: function(n,v,push) {
		if(push == null) {
			push = true;
		}
		var ret = this.values != null ? this.values.h[n] : null;
		var value;
		if(ret == null) {
			if(this.baseParent != null) {
				var _this = this.baseParent;
				var ret1 = _this.values != null ? _this.values.h[n] : null;
				value = ret1 == null ? _this.baseParent != null ? _this.baseParent.resolve(n) : null : ret1;
			} else {
				value = null;
			}
		} else {
			value = ret;
		}
		if(value != null) {
			value.set(v,push);
		} else {
			new ub1_reactivity_ReValue(this,n,v);
		}
	}
	,trigger: function(n) {
		var ret = this.values != null ? this.values.h[n] : null;
		var value;
		if(ret == null) {
			if(this.baseParent != null) {
				var _this = this.baseParent;
				var ret1 = _this.values != null ? _this.values.h[n] : null;
				value = ret1 == null ? _this.baseParent != null ? _this.baseParent.resolve(n) : null : ret1;
			} else {
				value = null;
			}
		} else {
			value = ret;
		}
		if(value != null) {
			var _gthis = value;
			haxe_Timer.delay(function() {
				_gthis._set(_gthis.v,true);
			},0);
		}
	}
	,exists: function(n) {
		if(ub1_reactivity_ReInterp.ENABLE_UNKNOWN_VAR_EXCEPTION) {
			return Object.prototype.hasOwnProperty.call(this.values.h,n);
		} else {
			return true;
		}
	}
	,addValue: function(name,value,refreshable) {
		if(refreshable == null) {
			refreshable = true;
		}
		if(name == null) {
			name = "-v" + ++this.autoId;
		}
		value.k = name;
		(this.values == null ? this.values = new haxe_ds_StringMap() : this.values).h[name] = value;
		if(refreshable) {
			value.linkAfter(this.refreshableList == null ? this.refreshableList = new ub1_lib_DoubleLinkedItem() : this.refreshableList);
		}
	}
	,refresh: function() {
		this.context.refresh(this);
	}
	,ensureValues: function() {
		if(this.values == null) {
			return this.values = new haxe_ds_StringMap();
		} else {
			return this.values;
		}
	}
	,ensureRefreshableList: function() {
		if(this.refreshableList == null) {
			return this.refreshableList = new ub1_lib_DoubleLinkedItem();
		} else {
			return this.refreshableList;
		}
	}
	,resolve: function(name) {
		var ret = this.values != null ? this.values.h[name] : null;
		if(ret == null) {
			if(this.baseParent != null) {
				return this.baseParent.resolve(name);
			} else {
				return null;
			}
		} else {
			return ret;
		}
	}
	,refreshScope: function() {
		var v = this.refreshableList != null ? this.refreshableList.next : null;
		while(v != null) {
			v.get();
			v = v.next;
		}
		var _g = 0;
		var _g1 = this.get_baseChildren();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(!child.clonedScope) {
				child.refreshScope();
			}
		}
	}
	,animate: function(key,val,secs,delay,cb,easingName) {
		if(delay == null) {
			delay = .0;
		}
		if(secs == null) {
			secs = .0;
		}
		var scope = this;
		var s = scope;
		while(s != null) {
			if(s.exists(key)) {
				scope = s;
				break;
			}
			s = s.baseParent;
		}
		var easing;
		if(easingName == null) {
			easing = feffects_easing_Cubic.easeInOut;
		} else {
			switch(easingName) {
			case "easeIn":
				easing = feffects_easing_Cubic.easeIn;
				break;
			case "easeOut":
				easing = feffects_easing_Cubic.easeOut;
				break;
			default:
				easing = feffects_easing_Cubic.easeInOut;
			}
		}
		var animation = this.animations.h[key];
		if(animation != null) {
			animation.delay = null;
			if(animation.tween != null) {
				animation.tween.stop();
			}
		}
		animation = { scope : scope, key : key, delay : function() {
			ub1_reactivity_ReScope.startAnimation(animation);
		}, val : val, secs : secs, easing : easing, tween : null, cb : cb};
		this.animations.h[key] = animation;
		haxe_Timer.delay(animation.delay,delay * 1000 | 0);
	}
	,delayedSet: function(key,val,secs,cb) {
		if(secs == null) {
			secs = .0;
		}
		var _gthis = this;
		var apply = function() {
			_gthis.set(key,val);
			if(cb != null) {
				cb();
			}
		};
		if(secs == 0 && this.context.cycle < 2) {
			apply();
		} else {
			haxe_Timer.delay(apply,secs * 1000 | 0);
		}
	}
	,delay: function(cb,secs) {
		if(secs == null) {
			secs = .0;
		}
		if(secs == 0 && this.context.cycle < 2) {
			cb();
		} else {
			haxe_Timer.delay(cb,secs * 1000 | 0);
		}
	}
	,__class__: ub1_reactivity_ReScope
	,__properties__: $extend(ub1_lib_BaseNode.prototype.__properties__,{get_childScopes:"get_childScopes",get_parentScope:"get_parentScope",get_rootScope:"get_rootScope"})
});
var ub1_core_Element = function(parent,props) {
	ub1_reactivity_ReScope.call(this,parent,props.clone != null ? null : props.name);
	this.id = props.id != null ? props.id : this.baseRoot.registerElement(props);
	this.dom = props.dom;
	ub1_lib_PropertyTools.set(props,"dom",null);
	this.clone = props.clone;
	ub1_lib_PropertyTools.set(props,"clone",null);
	var _g = 0;
	var props1 = props.attr;
	var _g1 = props1 != null ? Reflect.fields(props1) : [];
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var value = new ub1_reactivity_ReValue(this,"a_" + k,ub1_lib_PropertyTools.get(props.attr,k));
		value.userData = k;
		value.callback = $bind(this,this.attrCallback);
	}
	var _g = 0;
	var props1 = props.values;
	var _g1 = props1 != null ? Reflect.fields(props1) : [];
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var v = ub1_lib_PropertyTools.get(props.values,k);
		if(StringTools.startsWith(k,"ev_")) {
			var i1 = v.indexOf("[[");
			var i2 = i1 < 0 ? -1 : v.indexOf("]]",i1 + 2);
			if(i1 >= 0 && i2 > i1) {
				this.addEventHandler(k,v);
			}
		} else if(StringTools.startsWith(k,"on_")) {
			var i11 = v.indexOf("[[");
			var i21 = i11 < 0 ? -1 : v.indexOf("]]",i11 + 2);
			if(i11 >= 0 && i21 > i11) {
				this.addValueHandler(k,v);
			}
		} else {
			var value = new ub1_reactivity_ReValue(this,k,v);
			if(StringTools.startsWith(k,"c_")) {
				if(v == "") {
					value.v = true;
				}
				value.userData = ub1_lib_Util.makeHyphenName(HxOverrides.substr(k,2,null));
				value.callback = $bind(this,this.classCallback);
			} else if(StringTools.startsWith(k,"s_")) {
				value.userData = ub1_lib_Util.makeHyphenName(HxOverrides.substr(k,2,null));
				value.callback = $bind(this,this.styleCallback);
			}
		}
	}
	if(props.texts != null) {
		var _g = 0;
		var _g1 = props.texts;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			var value = new ub1_reactivity_ReValue(this,"-tn" + t.index,t.text);
			value.userData = ub1_lib_DomTools.domGetNthChild(this.dom,t.index);
			value.callback = $bind(this,this.textCallback);
		}
	}
	var e = this.dom;
	var v = "" + this.id;
	if(v != null) {
		e.setAttribute("data-id",v);
	} else {
		e.removeAttribute("data-id");
	}
	if(Object.prototype.hasOwnProperty.call(this.values.h,"data")) {
		this.values.h["data"].callback = $bind(this,this.dataCallback);
	}
	props._e = this;
	if(props._v != null) {
		var _g = 0;
		var props1 = props._v;
		var _g1 = props1 != null ? Reflect.fields(props1) : [];
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			var value = this.values.h[k];
			if(value != null) {
				value.v = ub1_lib_PropertyTools.get(props._v,k);
			}
		}
	}
};
$hxClasses["ub1.core.Element"] = ub1_core_Element;
ub1_core_Element.__name__ = true;
ub1_core_Element.__super__ = ub1_reactivity_ReScope;
ub1_core_Element.prototype = $extend(ub1_reactivity_ReScope.prototype,{
	get_root: function() {
		return this.baseRoot;
	}
	,get_parent: function() {
		return this.baseParent;
	}
	,addEventHandler: function(k,v) {
		var type = HxOverrides.substr(k,3,null);
		var value = new ub1_reactivity_ReValue(this,k,null,v,false,false);
		this.dom.addEventListener(type,function(ev) {
			value.set(ev);
		});
	}
	,addValueHandler: function(k,v) {
		var name = HxOverrides.substr(k,3,null);
		new ub1_reactivity_ReValue(this,null,"[[" + name + "]]",v);
	}
	,attrCallback: function(v,k,attrName) {
		var e = this.dom;
		var v1 = v;
		if(v1 != null) {
			e.setAttribute(attrName,v1);
		} else {
			e.removeAttribute(attrName);
		}
		return v;
	}
	,textCallback: function(v,k,n) {
		var s = v != null ? "" + Std.string(v) : "";
		if(new EReg("(&\\w{2,30};)","g").match(s)) {
			var e = n.ownerDocument.createElement("span");
			e.innerHTML = StringTools.replace(StringTools.replace(s,"<","&lt;"),">","&gt;");
			n.textContent = e.firstChild.textContent;
		} else {
			n.textContent = s;
		}
		return v;
	}
	,classCallback: function(v,k,className) {
		if(!(v == null || v == false || v == "false")) {
			this.dom.classList.add(className);
		} else {
			this.dom.classList.remove(className);
		}
		return v;
	}
	,styleCallback: function(v,k,styleName) {
		if(!(v == null || v == false || v == "false")) {
			this.dom.style.setProperty(styleName,"" + Std.string(v));
		} else {
			this.dom.style.removeProperty(styleName);
		}
		return v;
	}
	,initData: function() {
		if(Object.prototype.hasOwnProperty.call(this.values.h,"data")) {
			this.values.h["data"].callback = $bind(this,this.dataCallback);
		}
	}
	,dataCallback: function(v,k,userData) {
		var offset = this.getLocal("dataOffset");
		var length = this.getLocal("dataLength");
		if(((v) instanceof Array)) {
			var a = v;
			if(offset != null || length != null) {
				if(offset == null) {
					offset = 0;
				}
				if(length == null) {
					length = Math.max(0,a.length - offset);
				}
				a = a.slice(offset,offset + length);
			}
			if(this.clone != null) {
				var i = this.clone.index;
				if(i >= 0 && i < a.length) {
					return a[i];
				} else {
					return null;
				}
			} else {
				var count = Math.max(a.length - 1,0);
				if(this.clones == null) {
					this.clones = [];
				}
				var _g = 0;
				var _g1 = count;
				while(_g < _g1) {
					var i = _g++;
					if(i >= this.clones.length) {
						var c = this.cloneSelf(i);
						this.clones.push(c);
						c.context.refresh(c);
					}
				}
				while(this.clones.length > count) {
					var c = this.clones.pop();
					var n = c.dom;
					if(n.parentElement != null) {
						n.parentElement.removeChild(n);
					}
					if(c.baseParent != null) {
						c.baseParent.removeChild(c);
					}
				}
				var ret = a.length > 0 ? a[a.length - 1] : null;
				return ret;
			}
		} else {
			return v;
		}
	}
	,cloneSelf: function(cloneIndex) {
		var html = this.dom.outerHTML;
		var wrapper = this.baseRoot.doc.createElement("div");
		var v = html;
		var tmp = v != null;
		wrapper.innerHTML = v;
		var e = wrapper.firstElementChild;
		var v = "" + cloneIndex;
		if(v != null) {
			e.setAttribute("data-clone",v);
		} else {
			e.removeAttribute("data-clone");
		}
		var e1 = this.dom.parentElement;
		var before = this.dom;
		if(before != null) {
			e1.insertBefore(e,before);
		} else {
			e1.appendChild(e);
		}
		var ret = this.baseRoot.load(this.baseParent,e,cloneIndex);
		return ret;
	}
	,__class__: ub1_core_Element
	,__properties__: $extend(ub1_reactivity_ReScope.prototype.__properties__,{get_parent:"get_parent",get_root:"get_root"})
});
var ub1_core_Body = function(parent,props) {
	if(props == null) {
		props = { };
	}
	if(props.name == null) {
		props.name = "body";
	}
	ub1_core_Element.call(this,parent,props);
};
$hxClasses["ub1.core.Body"] = ub1_core_Body;
ub1_core_Body.__name__ = true;
ub1_core_Body.__super__ = ub1_core_Element;
ub1_core_Body.prototype = $extend(ub1_core_Element.prototype,{
	__class__: ub1_core_Body
});
var ub1_core_Head = function(parent,props) {
	if(props == null) {
		props = { };
	}
	if(props.name == null) {
		props.name = "head";
	}
	ub1_core_Element.call(this,parent,props);
	new ub1_reactivity_ReConst(this,"cssVendorize",function(s) {
		return "-moz-" + s + ";-webkit-" + s + ";-ms-" + s + ";" + s;
	});
	new ub1_reactivity_ReConst(this,"cssVendorize2",function(prefix,s) {
		return "" + prefix + "-moz-" + s + ";" + prefix + "-webkit-" + s + ";" + prefix + "-ms-" + s + ";" + prefix + s;
	});
};
$hxClasses["ub1.core.Head"] = ub1_core_Head;
ub1_core_Head.__name__ = true;
ub1_core_Head.__super__ = ub1_core_Element;
ub1_core_Head.prototype = $extend(ub1_core_Element.prototype,{
	__class__: ub1_core_Head
});
var ub1_core_Page = function(doc,props,pageProps) {
	this.doc = doc;
	this.propsRegistry = pageProps != null ? pageProps : [];
	if(props == null) {
		props = { };
	}
	if(props.name == null) {
		props.name = "page";
	}
	ub1_core_Element.call(this,null,props);
};
$hxClasses["ub1.core.Page"] = ub1_core_Page;
ub1_core_Page.__name__ = true;
ub1_core_Page.__super__ = ub1_core_Element;
ub1_core_Page.prototype = $extend(ub1_core_Element.prototype,{
	registerElement: function(props) {
		var ret = this.propsRegistry.length;
		props.id = ret;
		this.propsRegistry.push(props);
		return ret;
	}
	,getProps: function() {
		var _g = 0;
		var _g1 = this.propsRegistry;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var e = p._e;
			var k = haxe_ds_StringMap.keysIterator(e.values.h);
			while(k.hasNext()) {
				var k1 = k.next();
				var v = e.values.h[k1];
				if(!StringTools.startsWith(k1,"-") && !((v) instanceof ub1_reactivity_ReConst) && !v.isFunction) {
					if(p._v == null) {
						p._v = { };
					}
					ub1_lib_PropertyTools.set2(p._v,k1,v.v);
				}
			}
			ub1_lib_PropertyTools.set(p,"id",null);
			ub1_lib_PropertyTools.set(p,"_e",null);
		}
		return this.propsRegistry;
	}
	,load: function(parent,dom,cloneIndex) {
		var _gthis = this;
		var id = Std.parseInt(dom.getAttribute("data-id"));
		var props = this.propsRegistry[id];
		props.dom = dom;
		if(cloneIndex != null) {
			props.clone = { source : id, index : cloneIndex};
		}
		var ret = new ub1_core_Element(parent,props);
		var f = null;
		f = function(dom) {
			var e = dom.firstElementChild;
			while(e != null) {
				if(e.getAttribute("data-id") != null) {
					_gthis.load(ret,e);
				}
				e = e.nextElementSibling;
			}
		};
		f(dom);
		return ret;
	}
	,__class__: ub1_core_Page
});
var ub1_lib_ArrayTools = function() { };
$hxClasses["ub1.lib.ArrayTools"] = ub1_lib_ArrayTools;
ub1_lib_ArrayTools.__name__ = true;
ub1_lib_ArrayTools.arrayPeek = function(a) {
	var len = a.length;
	if(len > 0) {
		return a[len - 1];
	} else {
		return null;
	}
};
ub1_lib_ArrayTools.arrayLength = function(a) {
	if(a != null) {
		return a.length;
	} else {
		return 0;
	}
};
ub1_lib_ArrayTools.arraySort = function(array) {
	array.sort(function(a,b) {
		if(a > b) {
			return 1;
		} else if(a < b) {
			return -1;
		} else {
			return 0;
		}
	});
	return array;
};
var ub1_lib_DomTools = function() { };
$hxClasses["ub1.lib.DomTools"] = ub1_lib_DomTools;
ub1_lib_DomTools.__name__ = true;
ub1_lib_DomTools.domDefaultDoc = function() {
	return window.document;
};
ub1_lib_DomTools.domGetRootElement = function(d) {
	return d.documentElement;
};
ub1_lib_DomTools.domGetHead = function(doc) {
	var r = doc.getElementsByTagName("head");
	if(r.length > 0) {
		return r.item(0);
	} else {
		return null;
	}
};
ub1_lib_DomTools.domGetBody = function(doc) {
	var r = doc.getElementsByTagName("body");
	if(r.length > 0) {
		return r.item(0);
	} else {
		return null;
	}
};
ub1_lib_DomTools.domCreateElement = function(d,tagname) {
	return d.createElement(tagname);
};
ub1_lib_DomTools.domCreateTextNode = function(d,text) {
	if(text == null) {
		text = "";
	}
	return d.createTextNode(text);
};
ub1_lib_DomTools.domAddChild = function(e,n,before) {
	if(before != null) {
		e.insertBefore(n,before);
	} else {
		e.appendChild(n);
	}
	return n;
};
ub1_lib_DomTools.domRemove = function(n) {
	if(n.parentElement != null) {
		n.parentElement.removeChild(n);
	}
};
ub1_lib_DomTools.domParent = function(n) {
	return n.parentElement;
};
ub1_lib_DomTools.domFirstChild = function(e) {
	return e.firstChild;
};
ub1_lib_DomTools.domGetNthChild = function(e,i) {
	if(i >= 0 && i < e.childNodes.length) {
		return e.childNodes[i];
	} else {
		return null;
	}
};
ub1_lib_DomTools.domFirstElementChild = function(e) {
	return e.firstElementChild;
};
ub1_lib_DomTools.domNextSibling = function(e) {
	return e.nextSibling;
};
ub1_lib_DomTools.domNextElementSibling = function(e) {
	return e.nextElementSibling;
};
ub1_lib_DomTools.domAddEventHandler = function(e,type,h) {
	e.addEventListener(type,h);
};
ub1_lib_DomTools.domRemoveEventHandler = function(e,type,h) {
	e.removeEventListener(type,h);
};
ub1_lib_DomTools.domGetTagname = function(e) {
	return e.tagName;
};
ub1_lib_DomTools.domSetNodeText = function(t,v) {
	var s = v != null ? "" + Std.string(v) : "";
	if(new EReg("(&\\w{2,30};)","g").match(s)) {
		var e = t.ownerDocument.createElement("span");
		e.innerHTML = StringTools.replace(StringTools.replace(s,"<","&lt;"),">","&gt;");
		t.textContent = e.firstChild.textContent;
	} else {
		t.textContent = s;
	}
};
ub1_lib_DomTools.domGetNodeText = function(t) {
	return t.nodeValue;
};
ub1_lib_DomTools.domSetText = function(e,v) {
	v = v != null ? Std.string(v) : "";
	e.innerText = v;
};
ub1_lib_DomTools.domSetHtml = function(e,v) {
	var tmp = v != null;
	e.innerHTML = v;
};
ub1_lib_DomTools.domSet = function(e,k,v) {
	if(v != null) {
		e.setAttribute(k,v);
	} else {
		e.removeAttribute(k);
	}
};
ub1_lib_DomTools.domSet2 = function(e,k,v) {
	e.setAttribute(k,v);
};
ub1_lib_DomTools.domGet = function(e,key) {
	return e.getAttribute(key);
};
ub1_lib_DomTools.domCheck = function(e,key) {
	return e.hasAttribute(key);
};
ub1_lib_DomTools.domAttributeNames = function(e) {
	return [];
};
ub1_lib_DomTools.domOuterHTML = function(e) {
	return e.outerHTML;
};
var ub1_lib_DoubleLinkedItem = function() {
};
$hxClasses["ub1.lib.DoubleLinkedItem"] = ub1_lib_DoubleLinkedItem;
ub1_lib_DoubleLinkedItem.__name__ = true;
ub1_lib_DoubleLinkedItem.prototype = {
	linkAfter: function(other) {
		this.prev = other;
		if((this.next = other.next) != null) {
			this.next.prev = this;
		}
		other.next = this;
		return this;
	}
	,unlink: function() {
		if(this.prev != null) {
			this.prev.next = this.next;
		}
		if(this.next != null) {
			this.next.prev = this.prev;
		}
		return this;
	}
	,__class__: ub1_lib_DoubleLinkedItem
};
var ub1_lib_Observable = function(cb) {
	ub1_lib_DoubleLinkedItem.call(this);
	this._cb = cb;
};
$hxClasses["ub1.lib.Observable"] = ub1_lib_Observable;
ub1_lib_Observable.__name__ = true;
ub1_lib_Observable.__super__ = ub1_lib_DoubleLinkedItem;
ub1_lib_Observable.prototype = $extend(ub1_lib_DoubleLinkedItem.prototype,{
	setCallback: function(cb) {
		this._cb = cb;
	}
	,addObserver: function(o) {
		if(this._observers == null) {
			this._observers = [];
		}
		if(this._observers.indexOf(o) < 0) {
			this._observers.push(o);
			if(this._cb != null) {
				this._cb(this._observers.length);
			}
		}
	}
	,removeObserver: function(o) {
		var ret = false;
		if(this._observers != null && HxOverrides.remove(this._observers,o)) {
			if(this._observers.length < 1) {
				this._observers = null;
			}
			ret = true;
		}
		if(this._cb != null) {
			this._cb(this._observers != null ? this._observers.length : 0);
		}
		return ret;
	}
	,clearObservers: function() {
		if(this._observers != null) {
			while(this._observers.length > 0) this._observers.pop();
		}
		if(this._cb != null) {
			this._cb(this._observers != null ? this._observers.length : 0);
		}
	}
	,hasObservers: function() {
		if(this._observers != null) {
			return this._observers.length > 0;
		} else {
			return false;
		}
	}
	,notifyObservers: function(sender,arg) {
		if(sender == null) {
			sender = this;
		}
		if(this._observers != null) {
			var n = this._observers.length - 1;
			var _g = 0;
			var _g1 = this._observers.length;
			while(_g < _g1) {
				var i = _g++;
				this._observers[n - i](sender,arg);
			}
		}
	}
	,__class__: ub1_lib_Observable
});
var ub1_lib_PropertyTools = function() { };
$hxClasses["ub1.lib.PropertyTools"] = ub1_lib_PropertyTools;
ub1_lib_PropertyTools.__name__ = true;
ub1_lib_PropertyTools.get = function(props,key,defval) {
	var val = props != null ? Reflect.getProperty(props,key) : null;
	if(val != null) {
		return val;
	} else {
		return defval;
	}
};
ub1_lib_PropertyTools.getString = function(props,key,defval) {
	return ub1_lib_PropertyTools.get(props,key,defval);
};
ub1_lib_PropertyTools.getInt = function(props,key,defval) {
	if(defval == null) {
		defval = 0;
	}
	var ret = Std.parseInt(ub1_lib_PropertyTools.get(props,key));
	if(ret != null) {
		return ret;
	} else {
		return defval;
	}
};
ub1_lib_PropertyTools.set = function(props,key,val) {
	if(val != null) {
		if(props == null) {
			props = { };
		}
		Reflect.setProperty(props,key,val);
	} else if(props != null) {
		Reflect.deleteField(props,key);
	}
	return props;
};
ub1_lib_PropertyTools.set2 = function(props,key,val) {
	if(props == null) {
		props = { };
	}
	Reflect.setProperty(props,key,val);
	return props;
};
ub1_lib_PropertyTools.exists = function(props,key) {
	if(props != null) {
		return Object.prototype.hasOwnProperty.call(props,key);
	} else {
		return false;
	}
};
ub1_lib_PropertyTools.remove = function(props,key) {
	if(props != null) {
		Reflect.deleteField(props,key);
	}
};
ub1_lib_PropertyTools.keys = function(props) {
	if(props != null) {
		return Reflect.fields(props);
	} else {
		return [];
	}
};
ub1_lib_PropertyTools.ensure = function(props,key,val) {
	if(!ub1_lib_PropertyTools.exists(props,key)) {
		props = ub1_lib_PropertyTools.set(props,key,val);
	}
	return props;
};
ub1_lib_PropertyTools.ensure2 = function(props,key,val) {
	if(props == null) {
		props = { };
	}
	if(!ub1_lib_PropertyTools.exists(props,key)) {
		ub1_lib_PropertyTools.set2(props,key,val);
	}
	return props;
};
ub1_lib_PropertyTools.ensureWith = function(props,$with) {
	var _g = 0;
	var _g1 = $with != null ? Reflect.fields($with) : [];
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		props = ub1_lib_PropertyTools.ensure(props,key,ub1_lib_PropertyTools.get($with,key));
	}
	return props;
};
ub1_lib_PropertyTools.clone = function(props) {
	var ret = null;
	if(props != null) {
		ret = { };
		var _g = 0;
		var _g1 = props != null ? Reflect.fields(props) : [];
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			ub1_lib_PropertyTools.set(ret,key,ub1_lib_PropertyTools.get(props,key));
		}
	}
	return ret;
};
ub1_lib_PropertyTools.overwriteWith = function(props,$with) {
	var ret = props != null ? props : { };
	if($with != null) {
		var _g = 0;
		var _g1 = $with != null ? Reflect.fields($with) : [];
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			ub1_lib_PropertyTools.set(ret,key,ub1_lib_PropertyTools.get($with,key));
		}
	}
	return ret;
};
ub1_lib_PropertyTools.fillWith = function(dst,src,overwrite) {
	if(overwrite == null) {
		overwrite = false;
	}
	var ret = dst != null ? dst : { };
	if(src != null) {
		var _g = 0;
		var _g1 = src != null ? Reflect.fields(src) : [];
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			if(overwrite || !ub1_lib_PropertyTools.exists(dst,key)) {
				ub1_lib_PropertyTools.set(ret,key,ub1_lib_PropertyTools.get(src,key));
			}
		}
	}
	return ret;
};
ub1_lib_PropertyTools.overwrite = function(props,key,val,orRemove) {
	if(orRemove == null) {
		orRemove = false;
	}
	var ret = { existed : ub1_lib_PropertyTools.exists(props,key), key : key, val : ub1_lib_PropertyTools.get(props,key)};
	if(orRemove) {
		ub1_lib_PropertyTools.remove(props,key);
	} else {
		ub1_lib_PropertyTools.set(props,key,val);
	}
	return ret;
};
ub1_lib_PropertyTools.restore = function(props,old) {
	if(old != null) {
		if(old.existed) {
			ub1_lib_PropertyTools.set(props,old.key,old.val);
		} else {
			ub1_lib_PropertyTools.remove(props,old.key);
		}
	}
};
var ub1_lib_Set = {};
ub1_lib_Set.add = function(this1,key) {
	this1.set(key,true);
};
ub1_lib_Set.remove = function(this1,key) {
	return this1.remove(key);
};
ub1_lib_Set.exists = function(this1,key) {
	return this1.exists(key);
};
ub1_lib_Set.iterator = function(this1) {
	return this1.keys();
};
ub1_lib_Set.toString = function(this1) {
	return this1.toString();
};
ub1_lib_Set.toStringMap = function(t) {
	return new haxe_ds_StringMap();
};
ub1_lib_Set.toIntMap = function(t) {
	return new haxe_ds_IntMap();
};
ub1_lib_Set.toEnumValueMapMap = function(t) {
	return new haxe_ds_EnumValueMap();
};
ub1_lib_Set.toObjectMap = function(t) {
	return new haxe_ds_ObjectMap();
};
var ub1_lib_Util = function() { };
$hxClasses["ub1.lib.Util"] = ub1_lib_Util;
ub1_lib_Util.__name__ = true;
ub1_lib_Util.areEqual = function(a,b) {
	if(a != null) {
		return a == b;
	} else {
		return b == null;
	}
};
ub1_lib_Util.isTrue = function(v) {
	return !(v == null || v == false || v == "false");
};
ub1_lib_Util.orEmpty = function(v) {
	if(v == null) {
		return "";
	} else {
		return Std.string(v);
	}
};
ub1_lib_Util.toInt = function(s) {
	var ret = Std.parseInt(s);
	if(ret != null) {
		return ret;
	} else {
		return 0;
	}
};
ub1_lib_Util.toInt2 = function(s,defval) {
	var ret = Std.parseInt(s);
	if(ret != null) {
		return ret;
	} else {
		return defval;
	}
};
ub1_lib_Util.toFloat = function(s) {
	var ret = parseFloat(s);
	if(ret != NaN) {
		return ret;
	} else {
		return 0;
	}
};
ub1_lib_Util.toFloat2 = function(s,defval) {
	var ret = parseFloat(s);
	if(ret != NaN) {
		return ret;
	} else {
		return defval;
	}
};
ub1_lib_Util.makeCamelName = function(n) {
	return new EReg("(\\-\\w)","g").map(n,function(re) {
		var pos = re.matchedPos().pos + 1;
		return HxOverrides.substr(n,pos,1).toUpperCase();
	});
};
ub1_lib_Util.makeHyphenName = function(n) {
	return new EReg("([0-9a-z][A-Z])","g").map(n,function(re) {
		var p = re.matchedPos().pos;
		return HxOverrides.substr(n,p,1).toLowerCase() + "-" + HxOverrides.substr(n,p + 1,1).toLowerCase();
	});
};
ub1_lib_Util.normalizeText = function(s) {
	return new EReg("([\\s]+)","gm").map(s,function(ereg) {
		if(ereg.matched(1).indexOf("\n") >= 0) {
			return "\n";
		} else {
			return " ";
		}
	});
};
var ub1_reactivity_ReValue = function(scope,k,v,handler,refreshable,handleFirst,parse) {
	if(parse == null) {
		parse = true;
	}
	if(handleFirst == null) {
		handleFirst = true;
	}
	if(refreshable == null) {
		refreshable = true;
	}
	this.first = true;
	this.cycle = 0;
	ub1_lib_DoubleLinkedItem.call(this);
	this.scope = scope;
	this.k = k;
	this.isFunction = false;
	this.handleFirst = handleFirst;
	if(handler != null) {
		this.handlerExpr = ub1_reactivity_ReParser.parse(handler);
	}
	var tmp;
	if(parse && typeof(v) == "string") {
		var s = v;
		var i1 = s.indexOf("[[");
		var i2 = i1 < 0 ? -1 : s.indexOf("]]",i1 + 2);
		tmp = i1 >= 0 && i2 > i1;
	} else {
		tmp = false;
	}
	if(tmp) {
		this.expr = ub1_reactivity_ReParser.parse(v);
		var _g = this.expr.e;
		if(_g._hx_index == 14) {
			var _g1 = _g.ret;
			var name = _g.name;
			var fexpr = _g.e;
			var params = _g.args;
			this.isFunction = true;
			refreshable = false;
		}
		this.v = null;
	} else {
		refreshable = !Reflect.isFunction(v);
		this.v = v;
	}
	scope.addValue(k,this,refreshable);
};
$hxClasses["ub1.reactivity.ReValue"] = ub1_reactivity_ReValue;
ub1_reactivity_ReValue.__name__ = true;
ub1_reactivity_ReValue.__super__ = ub1_lib_DoubleLinkedItem;
ub1_reactivity_ReValue.prototype = $extend(ub1_lib_DoubleLinkedItem.prototype,{
	setState: function(v) {
		this.v = v;
	}
	,clearCycle: function() {
		this.cycle = 0;
	}
	,isRefreshable: function() {
		return this.prev != null;
	}
	,get: function(pull) {
		if(pull == null) {
			pull = true;
		}
		if(this.prev != null || this.first) {
			if(this.cycle != this.scope.context.cycle) {
				this.cycle = this.scope.context.cycle;
				if(this.expr != null || this.valueFn != null) {
					if(this.scope.context.isRefreshing) {
						this.scope.context.stack.push(this);
					}
					try {
						var v = null;
						if(this.valueFn != null) {
							v = this.valueFn();
						} else {
							v = this.scope.context.interp.run(this.scope,this.expr);
						}
						this._set(v);
					} catch( _g ) {
					}
					if(this.scope.context.isRefreshing) {
						this.scope.context.stack.pop();
					}
				} else if(this.first) {
					this.__set(this.v);
				}
			}
			if(pull && this.scope.context.isRefreshing) {
				var a = this.scope.context.stack;
				var len = a.length;
				var v = len > 0 ? a[len - 1] : null;
				if(v != null) {
					if(this.observable == null) {
						this.observable = new ub1_lib_Observable();
					}
					this.observable.addObserver($bind(v,v.observer));
					if(this.observable.prev == null) {
						this.observable.linkAfter(this.scope.context.observedList);
					}
				}
			}
		}
		return this.v;
	}
	,set: function(v,push) {
		if(push == null) {
			push = true;
		}
		this.expr = null;
		this.valueFn = null;
		this.unlink();
		return this._set(v,false,push);
	}
	,_set: function(v,force,push) {
		if(push == null) {
			push = true;
		}
		if(force == null) {
			force = false;
		}
		var oldValue = this.v;
		if(this.__set(v,force) && !this.scope.context.isRefreshing) {
			var ret = ++this.scope.context.pushNesting;
			var depth = ret;
			if(depth == 1) {
				var _this = this.scope.context;
				_this.cycleTime = new Date().getTime();
				if(++_this.cycle > 1000000) {
					_this.cycle = 1;
				}
				this.cycle = this.scope.context.cycle;
			}
			if(push && depth <= 100 && this.observable != null) {
				this.observable.notifyObservers(this,oldValue);
			}
			var _this = this.scope.context;
			var ret = --_this.pushNesting;
			if(ret < 1) {
				_this.pushNesting = 0;
				while(_this.applyList.next != null) (js_Boot.__cast(_this.applyList.next.unlink() , ub1_reactivity_Applier)).cb();
			}
		}
		return this.v;
	}
	,trigger: function() {
		var _gthis = this;
		haxe_Timer.delay(function() {
			_gthis._set(_gthis.v,true);
		},0);
	}
	,refresh: function() {
		if(this.cycle != this.scope.context.cycle) {
			this.cycle = this.scope.context.cycle;
			if(this.expr != null || this.valueFn != null) {
				if(this.scope.context.isRefreshing) {
					this.scope.context.stack.push(this);
				}
				try {
					var v = null;
					if(this.valueFn != null) {
						v = this.valueFn();
					} else {
						v = this.scope.context.interp.run(this.scope,this.expr);
					}
					this._set(v);
				} catch( _g ) {
				}
				if(this.scope.context.isRefreshing) {
					this.scope.context.stack.pop();
				}
			} else if(this.first) {
				this.__set(this.v);
			}
		}
	}
	,__set: function(v,force) {
		if(force == null) {
			force = false;
		}
		if(v != this.v || this.first || force) {
			var nTh = !this.first;
			this.first = false;
			if(this.callback != null) {
				v = this.callback(v,this.k,this.userData);
			}
			this.v = v;
			if(this.handlerExpr != null && (nTh || this.handleFirst)) {
				try {
					this.scope.context.interp.run(this.scope,this.handlerExpr);
				} catch( _g ) {
				}
			}
			return true;
		}
		return false;
	}
	,addObserver: function(o) {
		if(this.observable == null) {
			this.observable = new ub1_lib_Observable();
		}
		this.observable.addObserver(o);
		if(this.observable.prev == null) {
			this.observable.linkAfter(this.scope.context.observedList);
		}
	}
	,observer: function(sender,v) {
		this.get();
	}
	,__class__: ub1_reactivity_ReValue
});
var ub1_reactivity_ReConst = function(scope,k,v,handler,refreshable,handleFirst,parse) {
	if(parse == null) {
		parse = true;
	}
	if(handleFirst == null) {
		handleFirst = true;
	}
	if(refreshable == null) {
		refreshable = false;
	}
	ub1_reactivity_ReValue.call(this,scope,k,v,handler,refreshable,handleFirst,parse);
	this.unlink();
};
$hxClasses["ub1.reactivity.ReConst"] = ub1_reactivity_ReConst;
ub1_reactivity_ReConst.__name__ = true;
ub1_reactivity_ReConst.__super__ = ub1_reactivity_ReValue;
ub1_reactivity_ReConst.prototype = $extend(ub1_reactivity_ReValue.prototype,{
	set: function(v,push) {
		if(push == null) {
			push = false;
		}
		return v;
	}
	,__class__: ub1_reactivity_ReConst
});
var ub1_reactivity_ReContext = function(root) {
	this.pushNesting = 0;
	this.root = root;
	this.cycle = 0;
	this.cycleTime = 0;
	this.isRefreshing = false;
	this.interp = new ub1_reactivity_ReInterp();
	this.stack = [];
	this.observedList = new ub1_lib_DoubleLinkedItem();
	this.applyList = new ub1_lib_DoubleLinkedItem();
	this.pushNesting = 0;
};
$hxClasses["ub1.reactivity.ReContext"] = ub1_reactivity_ReContext;
ub1_reactivity_ReContext.__name__ = true;
ub1_reactivity_ReContext.prototype = {
	refresh: function(scope,cb) {
		if(scope == null) {
			scope = this.root;
			while(this.observedList.next != null) {
				(js_Boot.__cast(this.observedList.next , ub1_lib_Observable)).clearObservers();
				this.observedList.next.unlink();
			}
		}
		var wasRefreshing = this.isRefreshing;
		if(!wasRefreshing) {
			this.isRefreshing = true;
			this.cycleTime = new Date().getTime();
			if(++this.cycle > 1000000) {
				this.cycle = 1;
			}
		}
		if(cb != null) {
			cb();
		} else {
			scope.refreshScope();
		}
		if(!wasRefreshing) {
			this.isRefreshing = false;
			this.pushNesting = 0;
			while(this.applyList.next != null) (js_Boot.__cast(this.applyList.next.unlink() , ub1_reactivity_Applier)).cb();
		}
	}
	,clearDependencies: function() {
		while(this.observedList.next != null) {
			(js_Boot.__cast(this.observedList.next , ub1_lib_Observable)).clearObservers();
			this.observedList.next.unlink();
		}
	}
	,nextCycle: function() {
		this.cycleTime = new Date().getTime();
		if(++this.cycle > 1000000) {
			this.cycle = 1;
		}
	}
	,enterValuePush: function() {
		var ret = ++this.pushNesting;
		return ret;
	}
	,exitValuePush: function() {
		var ret = --this.pushNesting;
		if(ret < 1) {
			this.pushNesting = 0;
			while(this.applyList.next != null) (js_Boot.__cast(this.applyList.next.unlink() , ub1_reactivity_Applier)).cb();
		}
	}
	,addApplier: function(a) {
		if(this.isRefreshing || this.pushNesting > 0) {
			a.unlink().linkAfter(this.applyList);
		} else {
			a.cb();
		}
	}
	,run: function(scope,expr) {
		return this.interp.run(scope,expr);
	}
	,callApplyList: function() {
		while(this.applyList.next != null) (js_Boot.__cast(this.applyList.next.unlink() , ub1_reactivity_Applier)).cb();
	}
	,__class__: ub1_reactivity_ReContext
};
var ub1_reactivity_Applier = function(cb) {
	ub1_lib_DoubleLinkedItem.call(this);
	this.cb = cb;
};
$hxClasses["ub1.reactivity.Applier"] = ub1_reactivity_Applier;
ub1_reactivity_Applier.__name__ = true;
ub1_reactivity_Applier.__super__ = ub1_lib_DoubleLinkedItem;
ub1_reactivity_Applier.prototype = $extend(ub1_lib_DoubleLinkedItem.prototype,{
	apply: function() {
		this.cb();
	}
	,__class__: ub1_reactivity_Applier
});
var ub1_reactivity_ReInterp = function() {
	hscript_Interp.call(this);
};
$hxClasses["ub1.reactivity.ReInterp"] = ub1_reactivity_ReInterp;
ub1_reactivity_ReInterp.__name__ = true;
ub1_reactivity_ReInterp.__super__ = hscript_Interp;
ub1_reactivity_ReInterp.prototype = $extend(hscript_Interp.prototype,{
	run: function(scope,expr) {
		var ret = null;
		var prev = this.variables;
		var error = null;
		this.variables = scope;
		try {
			ret = hscript_Interp.prototype.execute.call(this,expr);
		} catch( _g ) {
			var ex = haxe_Exception.caught(_g).unwrap();
			error = ex;
		}
		this.variables = prev;
		if(error != null) {
			throw haxe_Exception.thrown(error);
		}
		return ret;
	}
	,execute: function(expr) {
		return hscript_Interp.prototype.execute.call(this,expr);
	}
	,expr: function(expr) {
		return hscript_Interp.prototype.expr.call(this,expr);
	}
	,get: function(o,f) {
		if(!ub1_reactivity_ReInterp.ENABLE_UNKNOWN_VAR_EXCEPTION && o == null) {
			return null;
		}
		if(((o) instanceof ub1_reactivity_ReScope)) {
			return o.get(f);
		} else {
			return hscript_Interp.prototype.get.call(this,o,f);
		}
	}
	,set: function(o,f,v) {
		if(!ub1_reactivity_ReInterp.ENABLE_UNKNOWN_VAR_EXCEPTION && o == null) {
			return v;
		}
		if(((o) instanceof ub1_reactivity_ReScope)) {
			o.set(f,v);
		} else {
			hscript_Interp.prototype.set.call(this,o,f,v);
		}
		return v;
	}
	,__class__: ub1_reactivity_ReInterp
});
var ub1_reactivity_ReParser = function() { };
$hxClasses["ub1.reactivity.ReParser"] = ub1_reactivity_ReParser;
ub1_reactivity_ReParser.__name__ = true;
ub1_reactivity_ReParser.isDynamic = function(s) {
	var i1 = s.indexOf("[[");
	var i2 = i1 < 0 ? -1 : s.indexOf("]]",i1 + 2);
	if(i1 >= 0) {
		return i2 > i1;
	} else {
		return false;
	}
};
ub1_reactivity_ReParser.parse = function(s,origin) {
	var sb_b = "";
	var sep = "";
	var exprStart;
	var exprEnd;
	if(StringTools.startsWith(s,"[[") && StringTools.endsWith(s,"]]")) {
		exprEnd = "";
		exprStart = exprEnd;
	} else {
		exprStart = "__nn__" + "(";
		exprEnd = ")";
	}
	var i = 0;
	var i1;
	var i2;
	while(true) {
		var tmp;
		i1 = s.indexOf("[[",i);
		if(i1 >= 0) {
			i2 = s.indexOf("]]",i1);
			tmp = i2 >= 0;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		while(i2 + 2 < s.length && s.charAt(i2 + 2) == "]") ++i2;
		sb_b += Std.string(sep);
		sep = "+";
		if(i1 > i) {
			var s1 = s.substring(i,i1);
			var _this_r = new RegExp("[']","g".split("u").join(""));
			var _this_r1 = new RegExp("[\"]","g".split("u").join(""));
			sb_b += Std.string("'" + s1.replace(_this_r1,"\\\"").replace(_this_r,"\\'") + "'+");
		}
		sb_b += Std.string(exprStart);
		sb_b += Std.string(s.substring(i1 + "[[".length,i2));
		sb_b += Std.string(exprEnd);
		i = i2 + "]]".length;
	}
	if(i < s.length || sep == "") {
		sb_b += Std.string(sep);
		var s1 = HxOverrides.substr(s,i,null);
		var _this_r = new RegExp("[']","g".split("u").join(""));
		var _this_r1 = new RegExp("[\"]","g".split("u").join(""));
		sb_b += Std.string("'" + s1.replace(_this_r1,"\\\"").replace(_this_r,"\\'") + "'");
	}
	var code = sb_b;
	var ret = ub1_reactivity_ReParser.parser.parseString(code,origin);
	return ret;
};
ub1_reactivity_ReParser.prepare = function(s) {
	var sb_b = "";
	var sep = "";
	var exprStart;
	var exprEnd;
	if(StringTools.startsWith(s,"[[") && StringTools.endsWith(s,"]]")) {
		exprEnd = "";
		exprStart = exprEnd;
	} else {
		exprStart = "__nn__" + "(";
		exprEnd = ")";
	}
	var i = 0;
	var i1;
	var i2;
	while(true) {
		var tmp;
		i1 = s.indexOf("[[",i);
		if(i1 >= 0) {
			i2 = s.indexOf("]]",i1);
			tmp = i2 >= 0;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		while(i2 + 2 < s.length && s.charAt(i2 + 2) == "]") ++i2;
		sb_b += sep == null ? "null" : "" + sep;
		sep = "+";
		if(i1 > i) {
			var s1 = s.substring(i,i1);
			var _this_r = new RegExp("[']","g".split("u").join(""));
			var _this_r1 = new RegExp("[\"]","g".split("u").join(""));
			sb_b += Std.string("'" + s1.replace(_this_r1,"\\\"").replace(_this_r,"\\'") + "'+");
		}
		sb_b += exprStart == null ? "null" : "" + exprStart;
		sb_b += Std.string(s.substring(i1 + "[[".length,i2));
		sb_b += exprEnd == null ? "null" : "" + exprEnd;
		i = i2 + "]]".length;
	}
	if(i < s.length || sep == "") {
		sb_b += sep == null ? "null" : "" + sep;
		var s1 = HxOverrides.substr(s,i,null);
		var _this_r = new RegExp("[']","g".split("u").join(""));
		var _this_r1 = new RegExp("[\"]","g".split("u").join(""));
		sb_b += Std.string("'" + s1.replace(_this_r1,"\\\"").replace(_this_r,"\\'") + "'");
	}
	return sb_b;
};
ub1_reactivity_ReParser.escape = function(s) {
	var _this_r = new RegExp("[']","g".split("u").join(""));
	var _this_r1 = new RegExp("[\"]","g".split("u").join(""));
	return s.replace(_this_r1,"\\\"").replace(_this_r,"\\'");
};
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
ub1_reactivity_ReParser.parser = new hscript_Parser();
ub1_reactivity_ReParser.parser.allowJSON = true;
feffects_Tween._aTweens = new haxe_ds_GenericStack();
feffects_Tween._aPaused = new haxe_ds_GenericStack();
feffects_Tween.INTERVAL = 10;
feffects_Tween.DEFAULT_EASING = feffects_Tween.easingEquation;
ub1_lib_BaseNode.SELF_SLOT = "self";
ub1_lib_BaseNode.DEFAULT_SLOT = "default";
ub1_lib_BaseNode.CATCHALL_SLOT = "catchall";
ub1_lib_BaseNode.NOCHILDREN = [];
ub1_reactivity_ReScope.NOTNULL_FUNCTION = "__nn__";
ub1_reactivity_ReScope.AUTOID_PREFIX = "-v";
ub1_reactivity_ReScope.suffixRE = new EReg("([^\\d^-^\\.]+)\\s*$","");
ub1_core_Element.DOMATTR_PREFIX = "a_";
ub1_core_Element.CLASSATTR_PREFIX = "c_";
ub1_core_Element.CLASSATTR_PREFIXLEN = 2;
ub1_core_Element.STYLEATTR_PREFIX = "s_";
ub1_core_Element.STYLEATTR_PREFIXLEN = 2;
ub1_core_Element.EVENTATTR_PREFIX = "ev_";
ub1_core_Element.EVENTATTR_PREFIXLEN = 3;
ub1_core_Element.HANDLERATTR_PREFIX = "on_";
ub1_core_Element.HANDLERATTR_PREFIXLEN = 3;
ub1_core_Element.ID_ATTR = "data-id";
ub1_core_Element.CLONE_ATTR = "data-clone";
ub1_core_Element.TEXT_PREFIX = "-tn";
ub1_core_Element.DATA_VALUE = "data";
ub1_core_Element.DATAOFFSET_VALUE = "dataOffset";
ub1_core_Element.DATALENGTH_VALUE = "dataLength";
ub1_reactivity_ReValue.MAX_DEPENDENCY_DEPTH = 100;
ub1_reactivity_ReInterp.ENABLE_UNKNOWN_VAR_EXCEPTION = false;
ub1_reactivity_ReParser.E1 = "[[";
ub1_reactivity_ReParser.E2 = "]]";
ub1_reactivity_ReParser.BLOCK_PREFIX = "__nn__" + "(";
ub1_reactivity_ReParser.BLOCK_SUFFIX = ")";
ub1_JavaClient.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
